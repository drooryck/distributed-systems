# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import chat_service_pb2 as chat__service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in chat_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChatServiceStub(object):
    """========== SERVICE DEFINITION ==========

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Signup = channel.unary_unary(
                '/chat.ChatService/Signup',
                request_serializer=chat__service__pb2.SignupRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.Login = channel.unary_unary(
                '/chat.ChatService/Login',
                request_serializer=chat__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=chat__service__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.Logout = channel.unary_unary(
                '/chat.ChatService/Logout',
                request_serializer=chat__service__pb2.EmptyRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.CountUnread = channel.unary_unary(
                '/chat.ChatService/CountUnread',
                request_serializer=chat__service__pb2.CountUnreadRequest.SerializeToString,
                response_deserializer=chat__service__pb2.CountUnreadResponse.FromString,
                _registered_method=True)
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=chat__service__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.ListMessages = channel.unary_unary(
                '/chat.ChatService/ListMessages',
                request_serializer=chat__service__pb2.ListMessagesRequest.SerializeToString,
                response_deserializer=chat__service__pb2.ListMessagesResponse.FromString,
                _registered_method=True)
        self.FetchAwayMsgs = channel.unary_unary(
                '/chat.ChatService/FetchAwayMsgs',
                request_serializer=chat__service__pb2.FetchAwayMsgsRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.ListAccounts = channel.unary_unary(
                '/chat.ChatService/ListAccounts',
                request_serializer=chat__service__pb2.ListAccountsRequest.SerializeToString,
                response_deserializer=chat__service__pb2.ListAccountsResponse.FromString,
                _registered_method=True)
        self.DeleteMessages = channel.unary_unary(
                '/chat.ChatService/DeleteMessages',
                request_serializer=chat__service__pb2.DeleteMessagesRequest.SerializeToString,
                response_deserializer=chat__service__pb2.DeleteMessagesResponse.FromString,
                _registered_method=True)
        self.DeleteAccount = channel.unary_unary(
                '/chat.ChatService/DeleteAccount',
                request_serializer=chat__service__pb2.EmptyRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.ResetDB = channel.unary_unary(
                '/chat.ChatService/ResetDB',
                request_serializer=chat__service__pb2.EmptyRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)
        self.Replicate = channel.unary_unary(
                '/chat.ChatService/Replicate',
                request_serializer=chat__service__pb2.ReplicationRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GenericResponse.FromString,
                _registered_method=True)


class ChatServiceServicer(object):
    """========== SERVICE DEFINITION ==========

    """

    def Signup(self, request, context):
        """1) signup
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """2) login
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """3) logout
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountUnread(self, request, context):
        """4) count_unread
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """5) send_message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMessages(self, request, context):
        """6) send_messages_to_client
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchAwayMsgs(self, request, context):
        """7) fetch_away_msgs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAccounts(self, request, context):
        """8) list_accounts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMessages(self, request, context):
        """9) delete_messages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAccount(self, request, context):
        """10) delete_account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDB(self, request, context):
        """11) reset_db
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Replicate(self, request, context):
        """12) replicate
        Replication RPC method - for the primary to replicate operations to backups.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.Signup,
                    request_deserializer=chat__service__pb2.SignupRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=chat__service__pb2.LoginRequest.FromString,
                    response_serializer=chat__service__pb2.LoginResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=chat__service__pb2.EmptyRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'CountUnread': grpc.unary_unary_rpc_method_handler(
                    servicer.CountUnread,
                    request_deserializer=chat__service__pb2.CountUnreadRequest.FromString,
                    response_serializer=chat__service__pb2.CountUnreadResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=chat__service__pb2.SendMessageRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'ListMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMessages,
                    request_deserializer=chat__service__pb2.ListMessagesRequest.FromString,
                    response_serializer=chat__service__pb2.ListMessagesResponse.SerializeToString,
            ),
            'FetchAwayMsgs': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchAwayMsgs,
                    request_deserializer=chat__service__pb2.FetchAwayMsgsRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'ListAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAccounts,
                    request_deserializer=chat__service__pb2.ListAccountsRequest.FromString,
                    response_serializer=chat__service__pb2.ListAccountsResponse.SerializeToString,
            ),
            'DeleteMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMessages,
                    request_deserializer=chat__service__pb2.DeleteMessagesRequest.FromString,
                    response_serializer=chat__service__pb2.DeleteMessagesResponse.SerializeToString,
            ),
            'DeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAccount,
                    request_deserializer=chat__service__pb2.EmptyRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'ResetDB': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDB,
                    request_deserializer=chat__service__pb2.EmptyRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
            'Replicate': grpc.unary_unary_rpc_method_handler(
                    servicer.Replicate,
                    request_deserializer=chat__service__pb2.ReplicationRequest.FromString,
                    response_serializer=chat__service__pb2.GenericResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat.ChatService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """========== SERVICE DEFINITION ==========

    """

    @staticmethod
    def Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Signup',
            chat__service__pb2.SignupRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Login',
            chat__service__pb2.LoginRequest.SerializeToString,
            chat__service__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Logout',
            chat__service__pb2.EmptyRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CountUnread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/CountUnread',
            chat__service__pb2.CountUnreadRequest.SerializeToString,
            chat__service__pb2.CountUnreadResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/SendMessage',
            chat__service__pb2.SendMessageRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ListMessages',
            chat__service__pb2.ListMessagesRequest.SerializeToString,
            chat__service__pb2.ListMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def FetchAwayMsgs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/FetchAwayMsgs',
            chat__service__pb2.FetchAwayMsgsRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ListAccounts',
            chat__service__pb2.ListAccountsRequest.SerializeToString,
            chat__service__pb2.ListAccountsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteMessages',
            chat__service__pb2.DeleteMessagesRequest.SerializeToString,
            chat__service__pb2.DeleteMessagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/DeleteAccount',
            chat__service__pb2.EmptyRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetDB(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/ResetDB',
            chat__service__pb2.EmptyRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Replicate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat.ChatService/Replicate',
            chat__service__pb2.ReplicationRequest.SerializeToString,
            chat__service__pb2.GenericResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

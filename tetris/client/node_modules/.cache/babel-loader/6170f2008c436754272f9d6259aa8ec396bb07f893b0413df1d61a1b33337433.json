{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport GameBoard from './GameBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // server endpoint\n\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server! My socket ID is:', socket.id);\n    });\n    socket.on('init', data => {\n      setGameState(data);\n    });\n    socket.on('gameState', data => {\n      setGameState(data);\n    });\n\n    // Cleanup event listeners when component unmounts\n    return () => {\n      socket.off('connect');\n      socket.off('init');\n      socket.off('gameState');\n    };\n  }, []);\n\n  // Example input handlers\n  const handleKeyDown = e => {\n    let action = null;\n    if (e.key === 'ArrowLeft') action = {\n      type: 'moveLeft'\n    };\n    if (e.key === 'ArrowRight') action = {\n      type: 'moveRight'\n    };\n    if (e.key === 'ArrowUp') action = {\n      type: 'rotate'\n    };\n    if (e.key === 'ArrowDown') action = {\n      type: 'drop'\n    };\n    if (action) {\n      socket.emit('playerAction', action);\n    }\n  };\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading game state...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleKeyDown,\n    tabIndex: \"0\",\n    style: {\n      outline: 'none'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tetristributed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n      board: gameState.board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oBlRs/Y9H9l2tlMNEmPjMmn94yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","io","GameBoard","jsxDEV","_jsxDEV","socket","App","_s","gameState","setGameState","on","console","log","id","data","off","handleKeyDown","e","action","key","type","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","tabIndex","style","outline","board","_c","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport GameBoard from './GameBoard';\n\nconst socket = io('http://localhost:3001'); // server endpoint\n\nfunction App() {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server! My socket ID is:', socket.id);\n    });\n  \n    socket.on('init', (data) => {\n      setGameState(data);\n    });\n  \n    socket.on('gameState', (data) => {\n      setGameState(data);\n    });\n  \n    // Cleanup event listeners when component unmounts\n    return () => {\n      socket.off('connect');\n      socket.off('init');\n      socket.off('gameState');\n    };\n  }, []);\n  \n\n  // Example input handlers\n  const handleKeyDown = (e) => {\n    let action = null;\n    if (e.key === 'ArrowLeft') action = { type: 'moveLeft' };\n    if (e.key === 'ArrowRight') action = { type: 'moveRight' };\n    if (e.key === 'ArrowUp') action = { type: 'rotate' };\n    if (e.key === 'ArrowDown') action = { type: 'drop' };\n\n    if (action) {\n      socket.emit('playerAction', action);\n    }\n  };\n\n  if (!gameState) {\n    return <div>Loading game state...</div>;\n  }\n\n  return (\n    <div onKeyDown={handleKeyDown} tabIndex=\"0\" style={{ outline: 'none' }}>\n      <h1>Tetristributed</h1>\n      <GameBoard board={gameState.board} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;AAE5C,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdM,MAAM,CAACK,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEP,MAAM,CAACQ,EAAE,CAAC;IACjE,CAAC,CAAC;IAEFR,MAAM,CAACK,EAAE,CAAC,MAAM,EAAGI,IAAI,IAAK;MAC1BL,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC;IAEFT,MAAM,CAACK,EAAE,CAAC,WAAW,EAAGI,IAAI,IAAK;MAC/BL,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXT,MAAM,CAACU,GAAG,CAAC,SAAS,CAAC;MACrBV,MAAM,CAACU,GAAG,CAAC,MAAM,CAAC;MAClBV,MAAM,CAACU,GAAG,CAAC,WAAW,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAID,CAAC,CAACE,GAAG,KAAK,WAAW,EAAED,MAAM,GAAG;MAAEE,IAAI,EAAE;IAAW,CAAC;IACxD,IAAIH,CAAC,CAACE,GAAG,KAAK,YAAY,EAAED,MAAM,GAAG;MAAEE,IAAI,EAAE;IAAY,CAAC;IAC1D,IAAIH,CAAC,CAACE,GAAG,KAAK,SAAS,EAAED,MAAM,GAAG;MAAEE,IAAI,EAAE;IAAS,CAAC;IACpD,IAAIH,CAAC,CAACE,GAAG,KAAK,WAAW,EAAED,MAAM,GAAG;MAAEE,IAAI,EAAE;IAAO,CAAC;IAEpD,IAAIF,MAAM,EAAE;MACVb,MAAM,CAACgB,IAAI,CAAC,cAAc,EAAEH,MAAM,CAAC;IACrC;EACF,CAAC;EAED,IAAI,CAACV,SAAS,EAAE;IACd,oBAAOJ,OAAA;MAAAkB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAEX,aAAc;IAACY,QAAQ,EAAC,GAAG;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAR,QAAA,gBACrElB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA,CAACF,SAAS;MAAC6B,KAAK,EAAEvB,SAAS,CAACuB;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACnB,EAAA,CAhDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
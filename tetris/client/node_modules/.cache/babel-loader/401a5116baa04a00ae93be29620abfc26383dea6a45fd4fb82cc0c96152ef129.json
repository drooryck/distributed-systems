{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\n\n// Connect to the WebSocket server\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\n\n// Map of tetromino values to colors\nconst COLORS = {\n  1: 'cyan',\n  // I\n  2: 'blue',\n  // J\n  3: 'orange',\n  // L\n  4: 'yellow',\n  // O\n  5: 'green',\n  // S\n  6: 'purple',\n  // T\n  7: 'red' // Z\n};\n\n// ----- GAME BOARD COMPONENT -----\nconst GameBoard = ({\n  board,\n  players,\n  currentPlayerId\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const cellSize = 30; // each cell is 30px\n\n  // Calculate canvas dimensions based on board size\n  const canvasWidth = board[0] ? board[0].length * cellSize : 300;\n  const canvasHeight = board.length * cellSize || 600;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw a dark background\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 0.5;\n\n    // Draw grid lines\n    for (let r = 0; r <= board.length; r++) {\n      ctx.beginPath();\n      ctx.moveTo(0, r * cellSize);\n      ctx.lineTo(canvas.width, r * cellSize);\n      ctx.stroke();\n    }\n    for (let c = 0; c <= board[0].length; c++) {\n      ctx.beginPath();\n      ctx.moveTo(c * cellSize, 0);\n      ctx.lineTo(c * cellSize, canvas.height);\n      ctx.stroke();\n    }\n\n    // Draw placed pieces on the board\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        const cell = board[r][c];\n        if (cell !== 0) {\n          // If the cell has a complex structure (from server)\n          if (typeof cell === 'object') {\n            const playerId = cell.playerId;\n            const player = Object.values(players).find(p => p.id === playerId.substring(0, 4));\n            ctx.fillStyle = player ? player.color : 'gray';\n          } else {\n            // If it's just a number (simple case)\n            ctx.fillStyle = COLORS[cell] || 'gray';\n          }\n          ctx.fillRect(c * cellSize, r * cellSize, cellSize, cellSize);\n          ctx.strokeStyle = '#FFF';\n          ctx.lineWidth = 1;\n          ctx.strokeRect(c * cellSize, r * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    // Draw active tetromino for each player\n    Object.values(players).forEach(player => {\n      const {\n        x,\n        y,\n        currentPiece,\n        color\n      } = player;\n      if (!currentPiece) return;\n      const shape = currentPiece.shape;\n      for (let r = 0; r < shape.length; r++) {\n        for (let c = 0; c < shape[r].length; c++) {\n          if (shape[r][c] !== 0) {\n            const boardX = x + c;\n            const boardY = y + r;\n\n            // Skip if out of bounds or above the board\n            if (boardX < 0 || boardX >= board[0].length || boardY < 0 || boardY >= board.length) {\n              continue;\n            }\n            ctx.fillStyle = color || currentPiece.color || 'gray';\n            ctx.fillRect(boardX * cellSize, boardY * cellSize, cellSize, cellSize);\n            ctx.strokeStyle = '#FFF';\n            ctx.lineWidth = 1;\n            ctx.strokeRect(boardX * cellSize, boardY * cellSize, cellSize, cellSize);\n          }\n        }\n      }\n    });\n  }, [board, players, currentPlayerId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      style: {\n        border: '2px solid #555'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n// ----- PLAYER LIST COMPONENT -----\n_s(GameBoard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GameBoard;\nconst PlayerList = ({\n  players,\n  currentPlayerId\n}) => {\n  const currentPlayerShortId = currentPlayerId === null || currentPlayerId === void 0 ? void 0 : currentPlayerId.substring(0, 4);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: \"Players\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '250px'\n      },\n      children: Object.values(players).map(player => {\n        const isCurrentPlayer = player.id === currentPlayerShortId;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: '8px',\n            backgroundColor: '#333',\n            borderRadius: '4px',\n            borderLeft: `4px solid ${player.color}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '15px',\n              height: '15px',\n              backgroundColor: player.color,\n              marginRight: '10px',\n              borderRadius: '3px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [\"Player \", player.playerNumber, isCurrentPlayer && ' (You)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: 'auto',\n              fontWeight: 'bold',\n              fontSize: '14px',\n              color: '#AAA'\n            },\n            children: player.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n// ----- SCOREBOARD COMPONENT -----\n_c2 = PlayerList;\nconst ScoreBoard = ({\n  players\n}) => {\n  // Sort players by score in descending order\n  const sortedPlayers = [...Object.values(players)].sort((a, b) => b.score - a.score);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: \"Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#222',\n        padding: '10px',\n        borderRadius: '4px',\n        maxWidth: '250px'\n      },\n      children: sortedPlayers.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          padding: '5px 0',\n          borderBottom: '1px solid #444'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '10px',\n              height: '10px',\n              backgroundColor: player.color,\n              marginRight: '8px',\n              borderRadius: '2px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Player \", player.playerNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: player.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n// ----- HOME SCREEN COMPONENT -----\n_c3 = ScoreBoard;\nconst HomeScreen = ({\n  players,\n  currentPlayerId,\n  readyPlayers,\n  onReady,\n  onStartGame,\n  onSetGameMode,\n  gameMode,\n  gameInProgress,\n  isRejoining\n}) => {\n  const currentPlayerShortId = currentPlayerId ? currentPlayerId.substring(0, 4) : null;\n  const currentPlayer = currentPlayerShortId ? Object.values(players).find(p => p.id === currentPlayerShortId) : null;\n  const isPlayerOne = currentPlayer && currentPlayer.playerNumber === 1;\n  const gameModes = [{\n    id: 'classic',\n    name: 'Classic Mode',\n    disabled: false\n  }, {\n    id: 'battle',\n    name: 'Battle Mode',\n    disabled: true\n  }, {\n    id: 'cooperative',\n    name: 'Co-op Mode',\n    disabled: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      maxWidth: '800px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tetristributed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), gameInProgress && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#552233',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"A game is currently in progress. Please wait for it to finish.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '40px',\n        flexWrap: 'wrap',\n        gap: '20px'\n      },\n      children: [1, 2, 3, 4].map(num => {\n        const player = Object.values(players).find(p => p.playerNumber === num);\n        const isReady = player && readyPlayers.some(id => players[id] && players[id].id === player.id);\n        const isCurrentPlayer = player && currentPlayerShortId && player.id === currentPlayerShortId;\n        const isPlayerRejoining = isCurrentPlayer && player.isRejoining;\n        const bgColor = !player ? '#222' : '#444';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '150px',\n            height: '100px',\n            border: '2px solid #555',\n            borderRadius: '8px',\n            padding: '10px',\n            backgroundColor: bgColor,\n            position: 'relative',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              marginBottom: '5px'\n            },\n            children: [\"Player \", num, isCurrentPlayer && ' (You)']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [player && isReady && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                backgroundColor: player.color,\n                margin: '0 auto'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this), isPlayerRejoining && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '0',\n                left: '0',\n                right: '0',\n                padding: '2px',\n                backgroundColor: '#33AA33',\n                color: 'white',\n                fontSize: '12px',\n                borderTopLeftRadius: '6px',\n                borderTopRightRadius: '6px'\n              },\n              children: \"Welcome Back!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), !player && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Waiting for player...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this), player && !isReady && !isCurrentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#888'\n              },\n              children: \"Not Ready\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), isCurrentPlayer && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 'auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onReady(!isReady),\n              style: {\n                backgroundColor: isReady ? '#333' : '#FF3333',\n                border: 'none',\n                color: 'white',\n                padding: '5px 10px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                width: '100%'\n              },\n              children: isReady ? 'Cancel' : isPlayerRejoining ? 'Rejoin Game' : 'Press X'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)]\n        }, num, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), isPlayerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '15px'\n        },\n        children: gameModes.map(mode => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => !mode.disabled && onSetGameMode(mode.id),\n          style: {\n            padding: '10px 15px',\n            backgroundColor: gameMode === mode.id ? '#FF5733' : '#444',\n            border: 'none',\n            borderRadius: '4px',\n            color: 'white',\n            opacity: mode.disabled ? 0.5 : 1,\n            cursor: mode.disabled ? 'not-allowed' : 'pointer'\n          },\n          disabled: mode.disabled,\n          children: [mode.name, mode.disabled && ' (Coming Soon)']\n        }, mode.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }, this), isPlayerOne && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onStartGame,\n      style: {\n        padding: '12px 30px',\n        backgroundColor: readyPlayers.length > 0 ? '#33FF57' : '#555',\n        border: 'none',\n        borderRadius: '4px',\n        color: 'white',\n        fontSize: '18px',\n        cursor: readyPlayers.length > 0 ? 'pointer' : 'not-allowed'\n      },\n      disabled: readyPlayers.length === 0,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), !isPlayerOne && readyPlayers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        fontSize: '18px'\n      },\n      children: \"Waiting for Player 1 to start the game...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '40px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Controls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2190 \\u2192 : Move left/right | \\u2191 or Z : Rotate | \\u2193 : Soft drop | Space : Hard drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n\n// ----- GAME OVER SCREEN COMPONENT -----\n_c4 = HomeScreen;\nconst GameOverScreen = ({\n  gameOverData,\n  onTimeout\n}) => {\n  _s2();\n  const [countdown, setCountdown] = useState(5);\n  useEffect(() => {\n    // Start countdown\n    const timer = setInterval(() => {\n      setCountdown(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          onTimeout();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [onTimeout]);\n\n  // Format the player ID to be more readable\n  const playerShortId = gameOverData.playerId ? gameOverData.playerId.substring(0, 4) : 'Unknown';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#333',\n        padding: '30px',\n        borderRadius: '10px',\n        boxShadow: '0 0 20px rgba(255, 0, 0, 0.5)',\n        textAlign: 'center',\n        color: 'white',\n        maxWidth: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '0 0 20px',\n          fontSize: '28px',\n          color: '#FF5733'\n        },\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '18px',\n          marginBottom: '15px'\n        },\n        children: [\"Player \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            color: '#FF5733'\n          },\n          children: playerShortId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 18\n        }, this), \" lost!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '24px',\n          margin: '20px 0'\n        },\n        children: [\"Final Score: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: gameOverData.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '16px',\n          marginTop: '25px',\n          color: '#AAA'\n        },\n        children: [\"Returning to lobby in \", countdown, \" seconds...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n};\n\n// ----- MAIN APP COMPONENT -----\n_s2(GameOverScreen, \"5IyNxS0sv4AHO/4kY6tmyq4YYJY=\");\n_c5 = GameOverScreen;\nfunction App() {\n  _s3();\n  var _gameState$players$so;\n  const [gameState, setGameState] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [gameOverData, setGameOverData] = useState(null);\n\n  // Handle socket events\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    socket.on('init', initialState => {\n      console.log('Received initial game state:', initialState);\n      setGameState(initialState);\n    });\n    socket.on('gameState', newState => {\n      setGameState(newState);\n    });\n    socket.on('gameOver', data => {\n      console.log('Game over with data:', data);\n      setIsGameOver(true);\n      setGameOverData(data);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('init');\n      socket.off('gameState');\n      socket.off('gameOver');\n    };\n  }, []);\n\n  // Keyboard control handlers\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // Only process key events if game is in progress\n      if (gameState && gameState.appPhase === 'playing') {\n        switch (e.code) {\n          case 'ArrowLeft':\n            socket.emit('playerAction', {\n              type: 'startDAS',\n              direction: 'left'\n            });\n            break;\n          case 'ArrowRight':\n            socket.emit('playerAction', {\n              type: 'startDAS',\n              direction: 'right'\n            });\n            break;\n          case 'ArrowUp':\n          case 'KeyZ':\n            socket.emit('playerAction', {\n              type: 'rotate'\n            });\n            break;\n          case 'ArrowDown':\n            socket.emit('playerAction', {\n              type: 'softDrop'\n            });\n            break;\n          case 'Space':\n            socket.emit('playerAction', {\n              type: 'hardDrop'\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    const handleKeyUp = e => {\n      // Only process key events if game is in progress\n      if (gameState && gameState.appPhase === 'playing') {\n        switch (e.code) {\n          case 'ArrowLeft':\n          case 'ArrowRight':\n            socket.emit('playerAction', {\n              type: 'endDAS'\n            });\n            break;\n          case 'ArrowDown':\n            socket.emit('playerAction', {\n              type: 'endSoftDrop'\n            });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState]);\n\n  // Handle player ready state\n  const handlePlayerReady = useCallback(isReady => {\n    socket.emit('playerReady', isReady);\n  }, []);\n\n  // Handle game start\n  const handleStartGame = useCallback(() => {\n    socket.emit('startGame');\n  }, []);\n\n  // Handle game mode change\n  const handleSetGameMode = useCallback(mode => {\n    socket.emit('setGameMode', mode);\n  }, []);\n\n  // Handle game over timeout\n  const handleGameOverTimeout = useCallback(() => {\n    setIsGameOver(false);\n    setGameOverData(null);\n  }, []);\n\n  // Show loading screen if no game state\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Connecting to server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Home screen or game screen based on app phase\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameState.appPhase === 'homescreen' && /*#__PURE__*/_jsxDEV(HomeScreen, {\n      players: gameState.players,\n      currentPlayerId: socket.id,\n      readyPlayers: gameState.readyPlayers,\n      onReady: handlePlayerReady,\n      onStartGame: handleStartGame,\n      onSetGameMode: handleSetGameMode,\n      gameMode: gameState.gameMode,\n      gameInProgress: gameState.gameInProgress,\n      isRejoining: (_gameState$players$so = gameState.players[socket.id]) === null || _gameState$players$so === void 0 ? void 0 : _gameState$players$so.isRejoining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this), gameState.appPhase === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tetristributed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected as player: \", socket.id && socket.id.substring(0, 4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n          board: gameState.board,\n          players: gameState.players,\n          currentPlayerId: socket.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(PlayerList, {\n            players: gameState.players,\n            currentPlayerId: socket.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ScoreBoard, {\n            players: gameState.players\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isGameOver && gameOverData && /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      gameOverData: gameOverData,\n      onTimeout: handleGameOverTimeout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 596,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"F+J5CdKKlfklcgEskksfjnnHQqc=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"GameBoard\");\n$RefreshReg$(_c2, \"PlayerList\");\n$RefreshReg$(_c3, \"ScoreBoard\");\n$RefreshReg$(_c4, \"HomeScreen\");\n$RefreshReg$(_c5, \"GameOverScreen\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","COLORS","GameBoard","board","players","currentPlayerId","_s","canvasRef","cellSize","canvasWidth","length","canvasHeight","canvas","current","ctx","getContext","clearRect","width","height","fillStyle","fillRect","strokeStyle","lineWidth","r","beginPath","moveTo","lineTo","stroke","c","cell","playerId","player","Object","values","find","p","id","substring","color","strokeRect","forEach","x","y","currentPiece","shape","boardX","boardY","children","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","PlayerList","currentPlayerShortId","marginBottom","display","flexDirection","gap","maxWidth","map","isCurrentPlayer","alignItems","padding","backgroundColor","borderRadius","borderLeft","marginRight","flex","playerNumber","marginLeft","fontWeight","fontSize","score","_c2","ScoreBoard","sortedPlayers","sort","a","b","justifyContent","borderBottom","_c3","HomeScreen","readyPlayers","onReady","onStartGame","onSetGameMode","gameMode","gameInProgress","isRejoining","currentPlayer","isPlayerOne","gameModes","name","disabled","textAlign","margin","flexWrap","num","isReady","some","isPlayerRejoining","bgColor","position","top","left","right","borderTopLeftRadius","borderTopRightRadius","marginTop","onClick","cursor","mode","opacity","_c4","GameOverScreen","gameOverData","onTimeout","_s2","countdown","setCountdown","timer","setInterval","prev","clearInterval","playerShortId","bottom","zIndex","boxShadow","_c5","App","_s3","_gameState$players$so","gameState","setGameState","isGameOver","setIsGameOver","setGameOverData","on","console","log","initialState","newState","data","off","handleKeyDown","e","appPhase","code","emit","type","direction","handleKeyUp","window","addEventListener","removeEventListener","handlePlayerReady","handleStartGame","handleSetGameMode","handleGameOverTimeout","className","_c6","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport io from 'socket.io-client';\n\n// Connect to the WebSocket server\nconst socket = io('http://localhost:3001');\n\n// Map of tetromino values to colors\nconst COLORS = {\n  1: 'cyan',    // I\n  2: 'blue',    // J\n  3: 'orange',  // L\n  4: 'yellow',  // O\n  5: 'green',   // S\n  6: 'purple',  // T\n  7: 'red'      // Z\n};\n\n// ----- GAME BOARD COMPONENT -----\nconst GameBoard = ({ board, players, currentPlayerId }) => {\n  const canvasRef = useRef(null);\n  const cellSize = 30; // each cell is 30px\n  \n  // Calculate canvas dimensions based on board size\n  const canvasWidth = board[0] ? board[0].length * cellSize : 300;\n  const canvasHeight = board.length * cellSize || 600;\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    \n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw a dark background\n    ctx.fillStyle = '#111';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw the grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 0.5;\n    \n    // Draw grid lines\n    for (let r = 0; r <= board.length; r++) {\n      ctx.beginPath();\n      ctx.moveTo(0, r * cellSize);\n      ctx.lineTo(canvas.width, r * cellSize);\n      ctx.stroke();\n    }\n    \n    for (let c = 0; c <= board[0].length; c++) {\n      ctx.beginPath();\n      ctx.moveTo(c * cellSize, 0);\n      ctx.lineTo(c * cellSize, canvas.height);\n      ctx.stroke();\n    }\n    \n    // Draw placed pieces on the board\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        const cell = board[r][c];\n        if (cell !== 0) {\n          // If the cell has a complex structure (from server)\n          if (typeof cell === 'object') {\n            const playerId = cell.playerId;\n            const player = Object.values(players).find(p => p.id === playerId.substring(0, 4));\n            ctx.fillStyle = player ? player.color : 'gray';\n          } else {\n            // If it's just a number (simple case)\n            ctx.fillStyle = COLORS[cell] || 'gray';\n          }\n          \n          ctx.fillRect(c * cellSize, r * cellSize, cellSize, cellSize);\n          ctx.strokeStyle = '#FFF';\n          ctx.lineWidth = 1;\n          ctx.strokeRect(c * cellSize, r * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n      \n    // Draw active tetromino for each player\n    Object.values(players).forEach(player => {\n      const { x, y, currentPiece, color } = player;\n      \n      if (!currentPiece) return;\n      \n      const shape = currentPiece.shape;\n      \n      for (let r = 0; r < shape.length; r++) {\n        for (let c = 0; c < shape[r].length; c++) {\n          if (shape[r][c] !== 0) {\n            const boardX = x + c;\n            const boardY = y + r;\n            \n            // Skip if out of bounds or above the board\n            if (boardX < 0 || boardX >= board[0].length || \n                boardY < 0 || boardY >= board.length) {\n              continue;\n            }\n            \n            ctx.fillStyle = color || currentPiece.color || 'gray';\n            ctx.fillRect(boardX * cellSize, boardY * cellSize, cellSize, cellSize);\n            ctx.strokeStyle = '#FFF';\n            ctx.lineWidth = 1;\n            ctx.strokeRect(boardX * cellSize, boardY * cellSize, cellSize, cellSize);\n          }\n        }\n      }\n    });\n    \n  }, [board, players, currentPlayerId]);\n\n  return (\n    <div>\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        style={{ border: '2px solid #555' }}\n      />\n    </div>\n  );\n};\n\n// ----- PLAYER LIST COMPONENT -----\nconst PlayerList = ({ players, currentPlayerId }) => {\n  const currentPlayerShortId = currentPlayerId?.substring(0, 4);\n  \n  return (\n    <div style={{ marginBottom: '20px' }}>\n      <h3 style={{ marginBottom: '10px' }}>Players</h3>\n      \n      <div style={{ \n        display: 'flex', \n        flexDirection: 'column',\n        gap: '10px',\n        maxWidth: '250px'\n      }}>\n        {Object.values(players).map(player => {\n          const isCurrentPlayer = player.id === currentPlayerShortId;\n          \n          return (\n            <div \n              key={player.id}\n              style={{ \n                display: 'flex',\n                alignItems: 'center',\n                padding: '8px',\n                backgroundColor: '#333',\n                borderRadius: '4px',\n                borderLeft: `4px solid ${player.color}`,\n              }}\n            >\n              <div \n                style={{ \n                  width: '15px', \n                  height: '15px', \n                  backgroundColor: player.color,\n                  marginRight: '10px',\n                  borderRadius: '3px'\n                }}\n              />\n              \n              <div style={{ flex: 1 }}>\n                Player {player.playerNumber}\n                {isCurrentPlayer && ' (You)'}\n              </div>\n              \n              <div style={{ \n                marginLeft: 'auto', \n                fontWeight: 'bold', \n                fontSize: '14px',\n                color: '#AAA'\n              }}>\n                {player.score}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\n// ----- SCOREBOARD COMPONENT -----\nconst ScoreBoard = ({ players }) => {\n  // Sort players by score in descending order\n  const sortedPlayers = [...Object.values(players)].sort((a, b) => b.score - a.score);\n  \n  return (\n    <div>\n      <h3 style={{ marginBottom: '10px' }}>Scores</h3>\n      \n      <div style={{\n        backgroundColor: '#222',\n        padding: '10px',\n        borderRadius: '4px',\n        maxWidth: '250px'\n      }}>\n        {sortedPlayers.map(player => (\n          <div \n            key={player.id}\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              padding: '5px 0',\n              borderBottom: '1px solid #444'\n            }}\n          >\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <div \n                style={{ \n                  width: '10px', \n                  height: '10px', \n                  backgroundColor: player.color,\n                  marginRight: '8px',\n                  borderRadius: '2px'\n                }}\n              />\n              <span>Player {player.playerNumber}</span>\n            </div>\n            <div style={{ fontWeight: 'bold' }}>{player.score}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// ----- HOME SCREEN COMPONENT -----\nconst HomeScreen = ({ \n  players, \n  currentPlayerId, \n  readyPlayers, \n  onReady, \n  onStartGame, \n  onSetGameMode, \n  gameMode,\n  gameInProgress,\n  isRejoining\n}) => {\n  const currentPlayerShortId = currentPlayerId ? currentPlayerId.substring(0, 4) : null;\n  const currentPlayer = currentPlayerShortId ? Object.values(players).find(p => p.id === currentPlayerShortId) : null;\n  const isPlayerOne = currentPlayer && currentPlayer.playerNumber === 1;\n  \n  const gameModes = [\n    { id: 'classic', name: 'Classic Mode', disabled: false },\n    { id: 'battle', name: 'Battle Mode', disabled: true },\n    { id: 'cooperative', name: 'Co-op Mode', disabled: true }\n  ];\n  \n  return (\n    <div style={{ textAlign: 'center', maxWidth: '800px', margin: '0 auto' }}>\n      <h1>Tetristributed</h1>\n      \n      {gameInProgress && (\n        <div style={{\n          backgroundColor: '#552233',\n          padding: '10px',\n          borderRadius: '5px',\n          marginBottom: '20px'\n        }}>\n          <h2>Game In Progress</h2>\n          <p>A game is currently in progress. Please wait for it to finish.</p>\n        </div>\n      )}\n      \n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        marginBottom: '40px',\n        flexWrap: 'wrap',\n        gap: '20px'\n      }}>\n        {[1, 2, 3, 4].map(num => {\n          const player = Object.values(players).find(p => p.playerNumber === num);\n          const isReady = player && readyPlayers.some(id => players[id] && players[id].id === player.id);\n          const isCurrentPlayer = player && currentPlayerShortId && player.id === currentPlayerShortId;\n          const isPlayerRejoining = isCurrentPlayer && player.isRejoining;\n          const bgColor = !player ? '#222' : '#444';\n          \n          return (\n            <div key={num} style={{\n              width: '150px',\n              height: '100px',\n              border: '2px solid #555',\n              borderRadius: '8px',\n              padding: '10px',\n              backgroundColor: bgColor,\n              position: 'relative',\n              display: 'flex',\n              flexDirection: 'column'\n            }}>\n              <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>\n                Player {num}\n                {isCurrentPlayer && ' (You)'}\n              </div>\n              \n              <div style={{ flex: 1 }}>\n                {player && isReady && (\n                  <div style={{\n                    width: '20px',\n                    height: '20px',\n                    backgroundColor: player.color,\n                    margin: '0 auto'\n                  }}></div>\n                )}\n                \n                {isPlayerRejoining && (\n                  <div style={{\n                    position: 'absolute',\n                    top: '0',\n                    left: '0',\n                    right: '0',\n                    padding: '2px',\n                    backgroundColor: '#33AA33',\n                    color: 'white',\n                    fontSize: '12px',\n                    borderTopLeftRadius: '6px',\n                    borderTopRightRadius: '6px'\n                  }}>\n                    Welcome Back!\n                  </div>\n                )}\n                \n                {!player && <div>Waiting for player...</div>}\n                \n                {player && !isReady && !isCurrentPlayer && (\n                  <div style={{ fontSize: '14px', color: '#888' }}>Not Ready</div>\n                )}\n              </div>\n              \n              {isCurrentPlayer && (\n                <div style={{ marginTop: 'auto' }}>\n                  <button \n                    onClick={() => onReady(!isReady)}\n                    style={{\n                      backgroundColor: isReady ? '#333' : '#FF3333',\n                      border: 'none',\n                      color: 'white',\n                      padding: '5px 10px',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      width: '100%'\n                    }}\n                  >\n                    {isReady ? 'Cancel' : isPlayerRejoining ? 'Rejoin Game' : 'Press X'}\n                  </button>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n      \n      {isPlayerOne && (\n        <div style={{ marginBottom: '30px' }}>\n          <h2>Game Mode</h2>\n          <div style={{ display: 'flex', justifyContent: 'center', gap: '15px' }}>\n            {gameModes.map(mode => (\n              <button\n                key={mode.id}\n                onClick={() => !mode.disabled && onSetGameMode(mode.id)}\n                style={{\n                  padding: '10px 15px',\n                  backgroundColor: gameMode === mode.id ? '#FF5733' : '#444',\n                  border: 'none',\n                  borderRadius: '4px',\n                  color: 'white',\n                  opacity: mode.disabled ? 0.5 : 1,\n                  cursor: mode.disabled ? 'not-allowed' : 'pointer'\n                }}\n                disabled={mode.disabled}\n              >\n                {mode.name}\n                {mode.disabled && ' (Coming Soon)'}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {isPlayerOne && (\n        <button\n          onClick={onStartGame}\n          style={{\n            padding: '12px 30px',\n            backgroundColor: readyPlayers.length > 0 ? '#33FF57' : '#555',\n            border: 'none',\n            borderRadius: '4px',\n            color: 'white',\n            fontSize: '18px',\n            cursor: readyPlayers.length > 0 ? 'pointer' : 'not-allowed'\n          }}\n          disabled={readyPlayers.length === 0}\n        >\n          Start Game\n        </button>\n      )}\n      \n      {!isPlayerOne && readyPlayers.length > 0 && (\n        <div style={{ marginTop: '20px', fontSize: '18px' }}>\n          Waiting for Player 1 to start the game...\n        </div>\n      )}\n      \n      <div style={{ marginTop: '40px' }}>\n        <h3>Controls</h3>\n        <p>← → : Move left/right | ↑ or Z : Rotate | ↓ : Soft drop | Space : Hard drop</p>\n      </div>\n    </div>\n  );\n};\n\n// ----- GAME OVER SCREEN COMPONENT -----\nconst GameOverScreen = ({ gameOverData, onTimeout }) => {\n  const [countdown, setCountdown] = useState(5);\n  \n  useEffect(() => {\n    // Start countdown\n    const timer = setInterval(() => {\n      setCountdown(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          onTimeout();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, [onTimeout]);\n  \n  // Format the player ID to be more readable\n  const playerShortId = gameOverData.playerId ? gameOverData.playerId.substring(0, 4) : 'Unknown';\n  \n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000\n    }}>\n      <div style={{\n        backgroundColor: '#333',\n        padding: '30px',\n        borderRadius: '10px',\n        boxShadow: '0 0 20px rgba(255, 0, 0, 0.5)',\n        textAlign: 'center',\n        color: 'white',\n        maxWidth: '400px'\n      }}>\n        <h2 style={{ margin: '0 0 20px', fontSize: '28px', color: '#FF5733' }}>Game Over</h2>\n        \n        <div style={{ fontSize: '18px', marginBottom: '15px' }}>\n          Player <span style={{ fontWeight: 'bold', color: '#FF5733' }}>{playerShortId}</span> lost!\n        </div>\n        \n        <div style={{ fontSize: '24px', margin: '20px 0' }}>\n          Final Score: <span style={{ fontWeight: 'bold' }}>{gameOverData.score}</span>\n        </div>\n        \n        <div style={{ fontSize: '16px', marginTop: '25px', color: '#AAA' }}>\n          Returning to lobby in {countdown} seconds...\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// ----- MAIN APP COMPONENT -----\nfunction App() {\n  const [gameState, setGameState] = useState(null);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [gameOverData, setGameOverData] = useState(null);\n  \n  // Handle socket events\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server');\n    });\n\n    socket.on('init', (initialState) => {\n      console.log('Received initial game state:', initialState);\n      setGameState(initialState);\n    });\n\n    socket.on('gameState', (newState) => {\n      setGameState(newState);\n    });\n\n    socket.on('gameOver', (data) => {\n      console.log('Game over with data:', data);\n      setIsGameOver(true);\n      setGameOverData(data);\n    });\n\n    return () => {\n      socket.off('connect');\n      socket.off('init');\n      socket.off('gameState');\n      socket.off('gameOver');\n    };\n  }, []);\n\n  // Keyboard control handlers\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      // Only process key events if game is in progress\n      if (gameState && gameState.appPhase === 'playing') {\n        switch (e.code) {\n          case 'ArrowLeft':\n            socket.emit('playerAction', { type: 'startDAS', direction: 'left' });\n            break;\n          case 'ArrowRight':\n            socket.emit('playerAction', { type: 'startDAS', direction: 'right' });\n            break;\n          case 'ArrowUp':\n          case 'KeyZ':\n            socket.emit('playerAction', { type: 'rotate' });\n            break;\n          case 'ArrowDown':\n            socket.emit('playerAction', { type: 'softDrop' });\n            break;\n          case 'Space':\n            socket.emit('playerAction', { type: 'hardDrop' });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    const handleKeyUp = (e) => {\n      // Only process key events if game is in progress\n      if (gameState && gameState.appPhase === 'playing') {\n        switch (e.code) {\n          case 'ArrowLeft':\n          case 'ArrowRight':\n            socket.emit('playerAction', { type: 'endDAS' });\n            break;\n          case 'ArrowDown':\n            socket.emit('playerAction', { type: 'endSoftDrop' });\n            break;\n          default:\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState]);\n\n  // Handle player ready state\n  const handlePlayerReady = useCallback((isReady) => {\n    socket.emit('playerReady', isReady);\n  }, []);\n\n  // Handle game start\n  const handleStartGame = useCallback(() => {\n    socket.emit('startGame');\n  }, []);\n\n  // Handle game mode change\n  const handleSetGameMode = useCallback((mode) => {\n    socket.emit('setGameMode', mode);\n  }, []);\n\n  // Handle game over timeout\n  const handleGameOverTimeout = useCallback(() => {\n    setIsGameOver(false);\n    setGameOverData(null);\n  }, []);\n\n  // Show loading screen if no game state\n  if (!gameState) {\n    return <div className=\"App\"><h1>Connecting to server...</h1></div>;\n  }\n\n  // Home screen or game screen based on app phase\n  return (\n    <div className=\"App\">\n      {gameState.appPhase === 'homescreen' && (\n        <HomeScreen\n          players={gameState.players}\n          currentPlayerId={socket.id}\n          readyPlayers={gameState.readyPlayers}\n          onReady={handlePlayerReady}\n          onStartGame={handleStartGame}\n          onSetGameMode={handleSetGameMode}\n          gameMode={gameState.gameMode}\n          gameInProgress={gameState.gameInProgress}\n          isRejoining={gameState.players[socket.id]?.isRejoining}\n        />\n      )}\n      \n      {gameState.appPhase === 'playing' && (\n        <>\n          <h1>Tetristributed</h1>\n          <p>Connected as player: {socket.id && socket.id.substring(0, 4)}</p>\n          <div style={{ display: 'flex', gap: '20px', marginBottom: '20px' }}>\n            <GameBoard \n              board={gameState.board} \n              players={gameState.players}\n              currentPlayerId={socket.id}\n            />\n            <div>\n              <PlayerList players={gameState.players} currentPlayerId={socket.id} />\n              <ScoreBoard players={gameState.players} />\n            </div>\n          </div>\n        </>\n      )}\n      \n      {isGameOver && gameOverData && (\n        <GameOverScreen \n          gameOverData={gameOverData} \n          onTimeout={handleGameOverTimeout} \n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/BoardStage.jsx\",\n  _s = $RefreshSig$();\n// client/src/BoardStage.jsx\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Konva from 'konva';\nimport { Stage, Layer, Group, Rect } from 'react-konva';\n\n/* ===== tweakable constants ======================================= */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CELL = 30;\nconst PARTICLES_PER_BLOCK = 200; // explosion density\nconst LOCK_EFFECT = 'tint'; // 'tint' (brighten) or 'mute' (darken)\nconst LOCK_FLASH_MS = 120; // ms duration of lock flash\nconst CLEAR_STYLE = 'explode';\n/* ================================================================ */\n\n/* canonical NES/TGM colours */\nconst BASE = {\n  1: '#00FFFF',\n  2: '#0000FF',\n  3: '#FF7700',\n  4: '#FFFF00',\n  5: '#00FF00',\n  6: '#FF0000',\n  7: '#AA00FF'\n};\n\n/* colour helpers */\nconst toRgb = h => [0, 2, 4].map(i => parseInt(h.slice(1 + i, 3 + i), 16));\nconst toHex = rgb => '#' + rgb.map(v => Math.max(0, Math.min(255, Math.round(v))).toString(16).padStart(2, '0')).join('');\nconst mix = (h, tgt, t) => toHex(toRgb(h).map((v, i) => v + (tgt[i] - v) * t));\nconst LIGHT = h => mix(h, [255, 255, 255], 0.5);\n_c = LIGHT;\nconst MID = h => mix(h, [255, 255, 255], 0.25);\n_c2 = MID;\nconst DARK = h => mix(h, [0, 0, 0], 0.5);\n_c3 = DARK;\nconst TINT = h => mix(h, [255, 255, 255], 0.6);\n_c4 = TINT;\nconst MUTE = h => mix(h, [0, 0, 0], 0.6);\n_c5 = MUTE;\nexport default function BoardStage({\n  board = [],\n  players = {},\n  linesToClear = []\n}) {\n  _s();\n  var _board$;\n  const rows = board.length;\n  const cols = ((_board$ = board[0]) === null || _board$ === void 0 ? void 0 : _board$.length) || 0;\n  const W = cols * CELL;\n  const H = rows * CELL;\n\n  /* ─── sound refs ───────────────────────────────────────────────── */\n  const lockSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/lock_sound.wav`));\n  const clearSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/clear.mp3`));\n\n  /* preload audio to avoid first‐play delay */\n  useEffect(() => {\n    lockSfx.current.preload = 'auto';\n    clearSfx.current.preload = 'auto';\n  }, []);\n\n  /* ─── lock‑flash canvas overlay ─────────────────────────────────── */\n  const flashCanvasRef = useRef(null);\n  const [flashes, setFlashes] = useState([]);\n  useEffect(() => {\n    const prev = flashCanvasRef.current.__prevBoard || [];\n    const fresh = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        var _prev$r, _board$r;\n        if (!((_prev$r = prev[r]) !== null && _prev$r !== void 0 && _prev$r[c]) && (_board$r = board[r]) !== null && _board$r !== void 0 && _board$r[c]) {\n          const base = BASE[board[r][c].value] || '#888';\n          const color = LOCK_EFFECT === 'tint' ? TINT(base) : MUTE(base);\n          fresh.push({\n            x: c,\n            y: r,\n            color,\n            ts: Date.now()\n          });\n        }\n      }\n    }\n    if (fresh.length) {\n      lockSfx.current.currentTime = 0;\n      lockSfx.current.play().catch(() => {});\n      setFlashes(fs => [...fs, ...fresh]);\n    }\n    flashCanvasRef.current.__prevBoard = board.map(r => [...r]);\n  }, [board, rows, cols]);\n  useEffect(() => {\n    const canvas = flashCanvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let raf;\n    const draw = () => {\n      ctx.clearRect(0, 0, W, H);\n      const now = Date.now();\n      setFlashes(fs => {\n        const alive = [];\n        fs.forEach(f => {\n          const age = now - f.ts;\n          if (age < LOCK_FLASH_MS) {\n            const alphaHex = Math.floor((1 - age / LOCK_FLASH_MS) * 255).toString(16).padStart(2, '0');\n            ctx.fillStyle = f.color + alphaHex;\n            ctx.fillRect(f.x * CELL, f.y * CELL, CELL, CELL);\n            alive.push(f);\n          }\n        });\n        return alive;\n      });\n      raf = requestAnimationFrame(draw);\n    };\n    raf = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(raf);\n  }, [W, H]);\n\n  /* ─── explosion on line‑clear ──────────────────────────────────── */\n  const [particles, setParticles] = useState([]);\n  const clearHandled = useRef(false);\n  useEffect(() => {\n    if (!linesToClear.length) {\n      clearHandled.current = false;\n      return;\n    }\n    if (clearHandled.current) return;\n    clearHandled.current = true;\n    clearSfx.current.currentTime = 0;\n    clearSfx.current.play().catch(() => {});\n    const rowsSet = new Set(linesToClear);\n    const newP = [];\n    board.forEach((row, r) => {\n      row.forEach((cell, c) => {\n        if (!cell || !rowsSet.has(r)) return;\n        const base = BASE[cell.value] || '#888';\n        for (let i = 0; i < PARTICLES_PER_BLOCK; i++) {\n          const ang = Math.random() * 2 * Math.PI;\n          const spd = 2 + Math.random() * 2;\n          newP.push({\n            id: `p-${r}-${c}-${i}-${Date.now()}`,\n            x: c * CELL + Math.random() * CELL,\n            y: r * CELL + Math.random() * CELL,\n            w: 2,\n            h: 2,\n            color: base,\n            dx: Math.cos(ang) * spd,\n            dy: Math.sin(ang) * spd - 0.3,\n            life: 40\n          });\n        }\n      });\n    });\n    setParticles(p => [...p, ...newP]);\n  }, [linesToClear, board]);\n\n  /* ─── particle update loop ───────────────────────────────────── */\n  useEffect(() => {\n    if (!particles.length) return;\n    let raf;\n    const step = () => {\n      setParticles(ps => ps.flatMap(p => {\n        const nx = p.x + p.dx;\n        const ny = p.y + p.dy + 0.35;\n        const nl = p.life - 1;\n        return nl > 0 ? [{\n          ...p,\n          x: nx,\n          y: ny,\n          life: nl\n        }] : [];\n      }));\n      raf = requestAnimationFrame(step);\n    };\n    raf = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(raf);\n  }, [particles.length]);\n\n  /* ─── memoise locked & active cells ───────────────────────────── */\n  const locked = useMemo(() => board.flatMap((row, r) => {\n    if (CLEAR_STYLE === 'explode' && linesToClear.includes(r)) return [];\n    return row.map((cell, c) => {\n      var _BASE$cell$value;\n      if (!cell) return null;\n      return {\n        id: `l-${r}-${c}`,\n        x: c,\n        y: r,\n        color: (_BASE$cell$value = BASE[cell.value]) !== null && _BASE$cell$value !== void 0 ? _BASE$cell$value : '#888'\n      };\n    }).filter(Boolean);\n  }), [board, linesToClear]);\n  const active = useMemo(() => Object.values(players).flatMap(p => {\n    var _p$currentPiece;\n    const shp = p === null || p === void 0 ? void 0 : (_p$currentPiece = p.currentPiece) === null || _p$currentPiece === void 0 ? void 0 : _p$currentPiece.shape;\n    if (!shp) return [];\n    return shp.flatMap((row, dr) => row.map((v, dc) => {\n      var _BASE$v;\n      if (!v) return null;\n      const gx = p.x + dc,\n        gy = p.y + dr;\n      if (gx < 0 || gx >= cols || gy < 0 || gy >= rows || CLEAR_STYLE === 'explode' && linesToClear.includes(gy)) return null;\n      return {\n        id: `a-${gx}-${gy}`,\n        x: gx,\n        y: gy,\n        color: (_BASE$v = BASE[v]) !== null && _BASE$v !== void 0 ? _BASE$v : '#888'\n      };\n    }).filter(Boolean));\n  }), [players, cols, rows, linesToClear]);\n\n  /* ─── glossy Block component ───────────────────────────────────── */\n  const Block = ({\n    x,\n    y,\n    color\n  }) => /*#__PURE__*/_jsxDEV(Group, {\n    x: x * CELL,\n    y: y * CELL,\n    listening: false,\n    children: [/*#__PURE__*/_jsxDEV(Rect, {\n      width: CELL,\n      height: CELL,\n      fill: \"transparent\",\n      stroke: \"#666\",\n      strokeWidth: 1.2,\n      cornerRadius: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect, {\n      x: 1,\n      y: 1,\n      width: CELL - 2,\n      height: CELL - 2,\n      cornerRadius: 2.5,\n      fillLinearGradientStartPoint: {\n        x: 0,\n        y: 0\n      },\n      fillLinearGradientEndPoint: {\n        x: 0,\n        y: CELL\n      },\n      fillLinearGradientColorStops: [0, LIGHT(color), 0.45, MID(color), 1, DARK(color)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect, {\n      x: CELL * 0.15,\n      y: CELL * 0.05,\n      width: CELL * 0.7,\n      height: CELL * 0.25,\n      cornerRadius: CELL * 0.35,\n      fillRadialGradientStartPoint: {\n        x: CELL * 0.35,\n        y: CELL * 0.2\n      },\n      fillRadialGradientStartRadius: 1,\n      fillRadialGradientEndPoint: {\n        x: CELL * 0.35,\n        y: CELL * 0.2\n      },\n      fillRadialGradientEndRadius: CELL * 0.35,\n      fillRadialGradientColorStops: [0, 'rgba(255,255,255,0.85)', 1, 'rgba(255,255,255,0)']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n\n  /* ─── render ───────────────────────────────────────────────────── */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: W,\n      height: H\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      width: W,\n      height: H,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        listening: false,\n        children: [/*#__PURE__*/_jsxDEV(Rect, {\n          x: 0,\n          y: 0,\n          width: W,\n          height: H,\n          fill: \"#111\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          opacity: 0.12,\n          children: [Array(rows + 1).fill().map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: 0,\n            y: i * CELL,\n            width: W,\n            height: 1,\n            fill: \"#888\"\n          }, `h${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)), Array(cols + 1).fill().map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: i * CELL,\n            y: 0,\n            width: 1,\n            height: H,\n            fill: \"#888\"\n          }, `v${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), locked.map(b => /*#__PURE__*/_jsxDEV(Block, {\n          ...b\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 28\n        }, this)), active.map(b => /*#__PURE__*/_jsxDEV(Block, {\n          ...b\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 28\n        }, this)), particles.map(p => /*#__PURE__*/_jsxDEV(Rect, {\n          x: p.x,\n          y: p.y,\n          width: p.w,\n          height: p.h,\n          fill: p.color,\n          opacity: p.life / 40,\n          listening: false\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: flashCanvasRef,\n      width: W,\n      height: H,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardStage, \"fec+/aHkltOyH2WCz4iWZldXAr8=\");\n_c6 = BoardStage;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LIGHT\");\n$RefreshReg$(_c2, \"MID\");\n$RefreshReg$(_c3, \"DARK\");\n$RefreshReg$(_c4, \"TINT\");\n$RefreshReg$(_c5, \"MUTE\");\n$RefreshReg$(_c6, \"BoardStage\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Konva","Stage","Layer","Group","Rect","jsxDEV","_jsxDEV","CELL","PARTICLES_PER_BLOCK","LOCK_EFFECT","LOCK_FLASH_MS","CLEAR_STYLE","BASE","toRgb","h","map","i","parseInt","slice","toHex","rgb","v","Math","max","min","round","toString","padStart","join","mix","tgt","t","LIGHT","_c","MID","_c2","DARK","_c3","TINT","_c4","MUTE","_c5","BoardStage","board","players","linesToClear","_s","_board$","rows","length","cols","W","H","lockSfx","Audio","process","env","PUBLIC_URL","clearSfx","current","preload","flashCanvasRef","flashes","setFlashes","prev","__prevBoard","fresh","r","c","_prev$r","_board$r","base","value","color","push","x","y","ts","Date","now","currentTime","play","catch","fs","canvas","ctx","getContext","raf","draw","clearRect","alive","forEach","f","age","alphaHex","floor","fillStyle","fillRect","requestAnimationFrame","cancelAnimationFrame","particles","setParticles","clearHandled","rowsSet","Set","newP","row","cell","has","ang","random","PI","spd","id","w","dx","cos","dy","sin","life","p","step","ps","flatMap","nx","ny","nl","locked","includes","_BASE$cell$value","filter","Boolean","active","Object","values","_p$currentPiece","shp","currentPiece","shape","dr","dc","_BASE$v","gx","gy","Block","listening","children","width","height","fill","stroke","strokeWidth","cornerRadius","fileName","_jsxFileName","lineNumber","columnNumber","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","fillRadialGradientStartPoint","fillRadialGradientStartRadius","fillRadialGradientEndPoint","fillRadialGradientEndRadius","fillRadialGradientColorStops","style","position","opacity","Array","_","b","ref","top","left","pointerEvents","_c6","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/BoardStage.jsx"],"sourcesContent":["// client/src/BoardStage.jsx\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Konva from 'konva';\nimport { Stage, Layer, Group, Rect } from 'react-konva';\n\n/* ===== tweakable constants ======================================= */\nconst CELL                = 30;\nconst PARTICLES_PER_BLOCK = 200;   // explosion density\nconst LOCK_EFFECT         = 'tint';   // 'tint' (brighten) or 'mute' (darken)\nconst LOCK_FLASH_MS       = 120;   // ms duration of lock flash\nconst CLEAR_STYLE         = 'explode';\n/* ================================================================ */\n\n/* canonical NES/TGM colours */\nconst BASE = {\n  1: '#00FFFF', 2: '#0000FF', 3: '#FF7700',\n  4: '#FFFF00', 5: '#00FF00', 6: '#FF0000', 7: '#AA00FF'\n};\n\n/* colour helpers */\nconst toRgb = h => [0,2,4].map(i => parseInt(h.slice(1+i,3+i), 16));\nconst toHex = rgb => '#' + rgb.map(v =>\n  Math.max(0, Math.min(255, Math.round(v)))\n    .toString(16).padStart(2,'0')\n).join('');\nconst mix   = (h, tgt, t) => toHex(toRgb(h).map((v,i) => v + (tgt[i] - v) * t));\nconst LIGHT = h => mix(h, [255,255,255], 0.5);\nconst MID   = h => mix(h, [255,255,255], 0.25);\nconst DARK  = h => mix(h, [0,0,0], 0.5);\nconst TINT  = h => mix(h, [255,255,255], 0.6);\nconst MUTE  = h => mix(h, [0,0,0], 0.6);\n\nexport default function BoardStage({ board = [], players = {}, linesToClear = [] }) {\n  const rows = board.length;\n  const cols = board[0]?.length || 0;\n  const W = cols * CELL;\n  const H = rows * CELL;\n\n  /* ─── sound refs ───────────────────────────────────────────────── */\n  const lockSfx  = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/lock_sound.wav`));\n  const clearSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/clear.mp3`));\n\n  /* preload audio to avoid first‐play delay */\n  useEffect(() => {\n    lockSfx.current.preload = 'auto';\n    clearSfx.current.preload = 'auto';\n  }, []);\n\n  /* ─── lock‑flash canvas overlay ─────────────────────────────────── */\n  const flashCanvasRef = useRef(null);\n  const [flashes, setFlashes] = useState([]);\n\n  useEffect(() => {\n    const prev = flashCanvasRef.current.__prevBoard || [];\n    const fresh = [];\n\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        if (!prev[r]?.[c] && board[r]?.[c]) {\n          const base  = BASE[board[r][c].value] || '#888';\n          const color = (LOCK_EFFECT === 'tint' ? TINT(base) : MUTE(base));\n          fresh.push({ x: c, y: r, color, ts: Date.now() });\n        }\n      }\n    }\n\n    if (fresh.length) {\n      lockSfx.current.currentTime = 0;\n      lockSfx.current.play().catch(() => {});\n      setFlashes(fs => [...fs, ...fresh]);\n    }\n\n    flashCanvasRef.current.__prevBoard = board.map(r => [...r]);\n  }, [board, rows, cols]);\n\n  useEffect(() => {\n    const canvas = flashCanvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let raf;\n\n    const draw = () => {\n      ctx.clearRect(0, 0, W, H);\n      const now = Date.now();\n\n      setFlashes(fs => {\n        const alive = [];\n        fs.forEach(f => {\n          const age = now - f.ts;\n          if (age < LOCK_FLASH_MS) {\n            const alphaHex = Math.floor((1 - age / LOCK_FLASH_MS) * 255)\n                                  .toString(16).padStart(2,'0');\n            ctx.fillStyle = f.color + alphaHex;\n            ctx.fillRect(f.x * CELL, f.y * CELL, CELL, CELL);\n            alive.push(f);\n          }\n        });\n        return alive;\n      });\n\n      raf = requestAnimationFrame(draw);\n    };\n\n    raf = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(raf);\n  }, [W, H]);\n\n  /* ─── explosion on line‑clear ──────────────────────────────────── */\n  const [particles, setParticles] = useState([]);\n  const clearHandled = useRef(false);\n\n  useEffect(() => {\n    if (!linesToClear.length) {\n      clearHandled.current = false;\n      return;\n    }\n    if (clearHandled.current) return;\n    clearHandled.current = true;\n\n    clearSfx.current.currentTime = 0;\n    clearSfx.current.play().catch(() => {});\n\n    const rowsSet = new Set(linesToClear);\n    const newP = [];\n\n    board.forEach((row, r) => {\n      row.forEach((cell, c) => {\n        if (!cell || !rowsSet.has(r)) return;\n        const base = BASE[cell.value] || '#888';\n\n        for (let i = 0; i < PARTICLES_PER_BLOCK; i++) {\n          const ang = Math.random() * 2 * Math.PI;\n          const spd = 2 + Math.random() * 2;\n          newP.push({\n            id:   `p-${r}-${c}-${i}-${Date.now()}`,\n            x:    c * CELL + Math.random() * CELL,\n            y:    r * CELL + Math.random() * CELL,\n            w:    2, h: 2,\n            color: base,\n            dx:   Math.cos(ang) * spd,\n            dy:   Math.sin(ang) * spd - 0.3,\n            life: 40\n          });\n        }\n      });\n    });\n\n    setParticles(p => [...p, ...newP]);\n  }, [linesToClear, board]);\n\n  /* ─── particle update loop ───────────────────────────────────── */\n  useEffect(() => {\n    if (!particles.length) return;\n    let raf;\n\n    const step = () => {\n      setParticles(ps => ps.flatMap(p => {\n        const nx = p.x + p.dx;\n        const ny = p.y + p.dy + 0.35;\n        const nl = p.life - 1;\n        return nl > 0\n          ? [{ ...p, x: nx, y: ny, life: nl }]\n          : [];\n      }));\n      raf = requestAnimationFrame(step);\n    };\n\n    raf = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(raf);\n  }, [particles.length]);\n\n  /* ─── memoise locked & active cells ───────────────────────────── */\n  const locked = useMemo(() =>\n    board.flatMap((row, r) => {\n      if (CLEAR_STYLE === 'explode' && linesToClear.includes(r)) return [];\n      return row.map((cell, c) => {\n        if (!cell) return null;\n        return {\n          id:    `l-${r}-${c}`,\n          x:     c,\n          y:     r,\n          color: BASE[cell.value] ?? '#888'\n        };\n      }).filter(Boolean);\n    }), [board, linesToClear]\n  );\n\n  const active = useMemo(() =>\n    Object.values(players).flatMap(p => {\n      const shp = p?.currentPiece?.shape;\n      if (!shp) return [];\n      return shp.flatMap((row, dr) => \n        row.map((v, dc) => {\n          if (!v) return null;\n          const gx = p.x + dc, gy = p.y + dr;\n          if (\n            gx < 0 || gx >= cols ||\n            gy < 0 || gy >= rows ||\n            (CLEAR_STYLE === 'explode' && linesToClear.includes(gy))\n          ) return null;\n          return {\n            id:    `a-${gx}-${gy}`,\n            x:     gx,\n            y:     gy,\n            color: BASE[v] ?? '#888'\n          };\n        }).filter(Boolean)\n      );\n    }), [players, cols, rows, linesToClear]\n  );\n\n  /* ─── glossy Block component ───────────────────────────────────── */\n  const Block = ({ x, y, color }) => (\n    <Group x={x * CELL} y={y * CELL} listening={false}>\n      {/* border */}\n      <Rect\n        width={CELL}\n        height={CELL}\n        fill=\"transparent\"\n        stroke=\"#666\"\n        strokeWidth={1.2}\n        cornerRadius={3}\n      />\n      {/* bevel gradient */}\n      <Rect\n        x={1}\n        y={1}\n        width={CELL - 2}\n        height={CELL - 2}\n        cornerRadius={2.5}\n        fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n        fillLinearGradientEndPoint={{ x: 0, y: CELL }}\n        fillLinearGradientColorStops={[\n          0, LIGHT(color),\n          0.45, MID(color),\n          1, DARK(color)\n        ]}\n      />\n      {/* highlight */}\n      <Rect\n        x={CELL * 0.15}\n        y={CELL * 0.05}\n        width={CELL * 0.7}\n        height={CELL * 0.25}\n        cornerRadius={CELL * 0.35}\n        fillRadialGradientStartPoint={{ x: CELL * 0.35, y: CELL * 0.2 }}\n        fillRadialGradientStartRadius={1}\n        fillRadialGradientEndPoint={{ x: CELL * 0.35, y: CELL * 0.2 }}\n        fillRadialGradientEndRadius={CELL * 0.35}\n        fillRadialGradientColorStops={[\n          0, 'rgba(255,255,255,0.85)',\n          1, 'rgba(255,255,255,0)'\n        ]}\n      />\n    </Group>\n  );\n\n  /* ─── render ───────────────────────────────────────────────────── */\n  return (\n    <div style={{ position: 'relative', width: W, height: H }}>\n      <Stage width={W} height={H}>\n        <Layer listening={false}>\n          {/* background & grid */}\n          <Rect x={0} y={0} width={W} height={H} fill=\"#111\" />\n          <Group opacity={0.12}>\n            {Array(rows+1).fill().map((_, i) => (\n              <Rect\n                key={`h${i}`}\n                x={0}\n                y={i * CELL}\n                width={W}\n                height={1}\n                fill=\"#888\"\n              />\n            ))}\n            {Array(cols+1).fill().map((_, i) => (\n              <Rect\n                key={`v${i}`}\n                x={i * CELL}\n                y={0}\n                width={1}\n                height={H}\n                fill=\"#888\"\n              />\n            ))}\n          </Group>\n\n          {/* locked & active blocks */}\n          {locked.map(b => <Block key={b.id} {...b} />)}\n          {active.map(b => <Block key={b.id} {...b} />)}\n\n          {/* explosion particles */}\n          {particles.map(p => (\n            <Rect\n              key={p.id}\n              x={p.x}\n              y={p.y}\n              width={p.w}\n              height={p.h}\n              fill={p.color}\n              opacity={p.life / 40}\n              listening={false}\n            />\n          ))}\n        </Layer>\n      </Stage>\n\n      {/* lock‑flash overlay */}\n      <canvas\n        ref={flashCanvasRef}\n        width={W}\n        height={H}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }}\n      />\n    </div>\n  );\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,QAAQ,aAAa;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAkB,EAAE;AAC9B,MAAMC,mBAAmB,GAAG,GAAG,CAAC,CAAG;AACnC,MAAMC,WAAW,GAAW,MAAM,CAAC,CAAG;AACtC,MAAMC,aAAa,GAAS,GAAG,CAAC,CAAG;AACnC,MAAMC,WAAW,GAAW,SAAS;AACrC;;AAEA;AACA,MAAMC,IAAI,GAAG;EACX,CAAC,EAAE,SAAS;EAAE,CAAC,EAAE,SAAS;EAAE,CAAC,EAAE,SAAS;EACxC,CAAC,EAAE,SAAS;EAAE,CAAC,EAAE,SAAS;EAAE,CAAC,EAAE,SAAS;EAAE,CAAC,EAAE;AAC/C,CAAC;;AAED;AACA,MAAMC,KAAK,GAAGC,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACH,CAAC,CAACI,KAAK,CAAC,CAAC,GAACF,CAAC,EAAC,CAAC,GAACA,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACnE,MAAMG,KAAK,GAAGC,GAAG,IAAI,GAAG,GAAGA,GAAG,CAACL,GAAG,CAACM,CAAC,IAClCC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,GAAG,EAAEF,IAAI,CAACG,KAAK,CAACJ,CAAC,CAAC,CAAC,CAAC,CACtCK,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAC,GAAG,CAChC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;AACV,MAAMC,GAAG,GAAKA,CAACf,CAAC,EAAEgB,GAAG,EAAEC,CAAC,KAAKZ,KAAK,CAACN,KAAK,CAACC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACM,CAAC,EAACL,CAAC,KAAKK,CAAC,GAAG,CAACS,GAAG,CAACd,CAAC,CAAC,GAAGK,CAAC,IAAIU,CAAC,CAAC,CAAC;AAC/E,MAAMC,KAAK,GAAGlB,CAAC,IAAIe,GAAG,CAACf,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE,GAAG,CAAC;AAACmB,EAAA,GAAxCD,KAAK;AACX,MAAME,GAAG,GAAKpB,CAAC,IAAIe,GAAG,CAACf,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AAACqB,GAAA,GAAzCD,GAAG;AACT,MAAME,IAAI,GAAItB,CAAC,IAAIe,GAAG,CAACf,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AAACuB,GAAA,GAAlCD,IAAI;AACV,MAAME,IAAI,GAAIxB,CAAC,IAAIe,GAAG,CAACf,CAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,EAAE,GAAG,CAAC;AAACyB,GAAA,GAAxCD,IAAI;AACV,MAAME,IAAI,GAAI1B,CAAC,IAAIe,GAAG,CAACf,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AAAC2B,GAAA,GAAlCD,IAAI;AAEV,eAAe,SAASE,UAAUA,CAAC;EAAEC,KAAK,GAAG,EAAE;EAAEC,OAAO,GAAG,CAAC,CAAC;EAAEC,YAAY,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,OAAA;EAClF,MAAMC,IAAI,GAAGL,KAAK,CAACM,MAAM;EACzB,MAAMC,IAAI,GAAG,EAAAH,OAAA,GAAAJ,KAAK,CAAC,CAAC,CAAC,cAAAI,OAAA,uBAARA,OAAA,CAAUE,MAAM,KAAI,CAAC;EAClC,MAAME,CAAC,GAAGD,IAAI,GAAG3C,IAAI;EACrB,MAAM6C,CAAC,GAAGJ,IAAI,GAAGzC,IAAI;;EAErB;EACA,MAAM8C,OAAO,GAAIvD,MAAM,CAAC,IAAIwD,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,wBAAwB,CAAC,CAAC;EACrF,MAAMC,QAAQ,GAAG5D,MAAM,CAAC,IAAIwD,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,mBAAmB,CAAC,CAAC;;EAEhF;EACA7D,SAAS,CAAC,MAAM;IACdyD,OAAO,CAACM,OAAO,CAACC,OAAO,GAAG,MAAM;IAChCF,QAAQ,CAACC,OAAO,CAACC,OAAO,GAAG,MAAM;EACnC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,cAAc,GAAG/D,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACgE,OAAO,EAAEC,UAAU,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EAE1CH,SAAS,CAAC,MAAM;IACd,MAAMoE,IAAI,GAAGH,cAAc,CAACF,OAAO,CAACM,WAAW,IAAI,EAAE;IACrD,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,IAAI,EAAEmB,CAAC,EAAE,EAAE;MAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGlB,IAAI,EAAEkB,CAAC,EAAE,EAAE;QAAA,IAAAC,OAAA,EAAAC,QAAA;QAC7B,IAAI,GAAAD,OAAA,GAACL,IAAI,CAACG,CAAC,CAAC,cAAAE,OAAA,eAAPA,OAAA,CAAUD,CAAC,CAAC,MAAAE,QAAA,GAAI3B,KAAK,CAACwB,CAAC,CAAC,cAAAG,QAAA,eAARA,QAAA,CAAWF,CAAC,CAAC,EAAE;UAClC,MAAMG,IAAI,GAAI3D,IAAI,CAAC+B,KAAK,CAACwB,CAAC,CAAC,CAACC,CAAC,CAAC,CAACI,KAAK,CAAC,IAAI,MAAM;UAC/C,MAAMC,KAAK,GAAIhE,WAAW,KAAK,MAAM,GAAG6B,IAAI,CAACiC,IAAI,CAAC,GAAG/B,IAAI,CAAC+B,IAAI,CAAE;UAChEL,KAAK,CAACQ,IAAI,CAAC;YAAEC,CAAC,EAAEP,CAAC;YAAEQ,CAAC,EAAET,CAAC;YAAEM,KAAK;YAAEI,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;UAAE,CAAC,CAAC;QACnD;MACF;IACF;IAEA,IAAIb,KAAK,CAACjB,MAAM,EAAE;MAChBI,OAAO,CAACM,OAAO,CAACqB,WAAW,GAAG,CAAC;MAC/B3B,OAAO,CAACM,OAAO,CAACsB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;MACtCnB,UAAU,CAACoB,EAAE,IAAI,CAAC,GAAGA,EAAE,EAAE,GAAGjB,KAAK,CAAC,CAAC;IACrC;IAEAL,cAAc,CAACF,OAAO,CAACM,WAAW,GAAGtB,KAAK,CAAC5B,GAAG,CAACoD,CAAC,IAAI,CAAC,GAAGA,CAAC,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACxB,KAAK,EAAEK,IAAI,EAAEE,IAAI,CAAC,CAAC;EAEvBtD,SAAS,CAAC,MAAM;IACd,MAAMwF,MAAM,GAAGvB,cAAc,CAACF,OAAO;IACrC,IAAI,CAACyB,MAAM,EAAE;IACb,MAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,IAAIC,GAAG;IAEP,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACjBH,GAAG,CAACI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtC,CAAC,EAAEC,CAAC,CAAC;MACzB,MAAM2B,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MAEtBhB,UAAU,CAACoB,EAAE,IAAI;QACf,MAAMO,KAAK,GAAG,EAAE;QAChBP,EAAE,CAACQ,OAAO,CAACC,CAAC,IAAI;UACd,MAAMC,GAAG,GAAGd,GAAG,GAAGa,CAAC,CAACf,EAAE;UACtB,IAAIgB,GAAG,GAAGnF,aAAa,EAAE;YACvB,MAAMoF,QAAQ,GAAGxE,IAAI,CAACyE,KAAK,CAAC,CAAC,CAAC,GAAGF,GAAG,GAAGnF,aAAa,IAAI,GAAG,CAAC,CACrCgB,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAC;YACnD0D,GAAG,CAACW,SAAS,GAAGJ,CAAC,CAACnB,KAAK,GAAGqB,QAAQ;YAClCT,GAAG,CAACY,QAAQ,CAACL,CAAC,CAACjB,CAAC,GAAGpE,IAAI,EAAEqF,CAAC,CAAChB,CAAC,GAAGrE,IAAI,EAAEA,IAAI,EAAEA,IAAI,CAAC;YAChDmF,KAAK,CAAChB,IAAI,CAACkB,CAAC,CAAC;UACf;QACF,CAAC,CAAC;QACF,OAAOF,KAAK;MACd,CAAC,CAAC;MAEFH,GAAG,GAAGW,qBAAqB,CAACV,IAAI,CAAC;IACnC,CAAC;IAEDD,GAAG,GAAGW,qBAAqB,CAACV,IAAI,CAAC;IACjC,OAAO,MAAMW,oBAAoB,CAACZ,GAAG,CAAC;EACxC,CAAC,EAAE,CAACpC,CAAC,EAAEC,CAAC,CAAC,CAAC;;EAEV;EACA,MAAM,CAACgD,SAAS,EAAEC,YAAY,CAAC,GAAGtG,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMuG,YAAY,GAAGxG,MAAM,CAAC,KAAK,CAAC;EAElCF,SAAS,CAAC,MAAM;IACd,IAAI,CAACiD,YAAY,CAACI,MAAM,EAAE;MACxBqD,YAAY,CAAC3C,OAAO,GAAG,KAAK;MAC5B;IACF;IACA,IAAI2C,YAAY,CAAC3C,OAAO,EAAE;IAC1B2C,YAAY,CAAC3C,OAAO,GAAG,IAAI;IAE3BD,QAAQ,CAACC,OAAO,CAACqB,WAAW,GAAG,CAAC;IAChCtB,QAAQ,CAACC,OAAO,CAACsB,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAEvC,MAAMqB,OAAO,GAAG,IAAIC,GAAG,CAAC3D,YAAY,CAAC;IACrC,MAAM4D,IAAI,GAAG,EAAE;IAEf9D,KAAK,CAACgD,OAAO,CAAC,CAACe,GAAG,EAAEvC,CAAC,KAAK;MACxBuC,GAAG,CAACf,OAAO,CAAC,CAACgB,IAAI,EAAEvC,CAAC,KAAK;QACvB,IAAI,CAACuC,IAAI,IAAI,CAACJ,OAAO,CAACK,GAAG,CAACzC,CAAC,CAAC,EAAE;QAC9B,MAAMI,IAAI,GAAG3D,IAAI,CAAC+F,IAAI,CAACnC,KAAK,CAAC,IAAI,MAAM;QAEvC,KAAK,IAAIxD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,mBAAmB,EAAEQ,CAAC,EAAE,EAAE;UAC5C,MAAM6F,GAAG,GAAGvF,IAAI,CAACwF,MAAM,CAAC,CAAC,GAAG,CAAC,GAAGxF,IAAI,CAACyF,EAAE;UACvC,MAAMC,GAAG,GAAG,CAAC,GAAG1F,IAAI,CAACwF,MAAM,CAAC,CAAC,GAAG,CAAC;UACjCL,IAAI,CAAC/B,IAAI,CAAC;YACRuC,EAAE,EAAI,KAAK9C,CAAC,IAAIC,CAAC,IAAIpD,CAAC,IAAI8D,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;YACtCJ,CAAC,EAAKP,CAAC,GAAG7D,IAAI,GAAGe,IAAI,CAACwF,MAAM,CAAC,CAAC,GAAGvG,IAAI;YACrCqE,CAAC,EAAKT,CAAC,GAAG5D,IAAI,GAAGe,IAAI,CAACwF,MAAM,CAAC,CAAC,GAAGvG,IAAI;YACrC2G,CAAC,EAAK,CAAC;YAAEpG,CAAC,EAAE,CAAC;YACb2D,KAAK,EAAEF,IAAI;YACX4C,EAAE,EAAI7F,IAAI,CAAC8F,GAAG,CAACP,GAAG,CAAC,GAAGG,GAAG;YACzBK,EAAE,EAAI/F,IAAI,CAACgG,GAAG,CAACT,GAAG,CAAC,GAAGG,GAAG,GAAG,GAAG;YAC/BO,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFlB,YAAY,CAACmB,CAAC,IAAI,CAAC,GAAGA,CAAC,EAAE,GAAGf,IAAI,CAAC,CAAC;EACpC,CAAC,EAAE,CAAC5D,YAAY,EAAEF,KAAK,CAAC,CAAC;;EAEzB;EACA/C,SAAS,CAAC,MAAM;IACd,IAAI,CAACwG,SAAS,CAACnD,MAAM,EAAE;IACvB,IAAIsC,GAAG;IAEP,MAAMkC,IAAI,GAAGA,CAAA,KAAM;MACjBpB,YAAY,CAACqB,EAAE,IAAIA,EAAE,CAACC,OAAO,CAACH,CAAC,IAAI;QACjC,MAAMI,EAAE,GAAGJ,CAAC,CAAC7C,CAAC,GAAG6C,CAAC,CAACL,EAAE;QACrB,MAAMU,EAAE,GAAGL,CAAC,CAAC5C,CAAC,GAAG4C,CAAC,CAACH,EAAE,GAAG,IAAI;QAC5B,MAAMS,EAAE,GAAGN,CAAC,CAACD,IAAI,GAAG,CAAC;QACrB,OAAOO,EAAE,GAAG,CAAC,GACT,CAAC;UAAE,GAAGN,CAAC;UAAE7C,CAAC,EAAEiD,EAAE;UAAEhD,CAAC,EAAEiD,EAAE;UAAEN,IAAI,EAAEO;QAAG,CAAC,CAAC,GAClC,EAAE;MACR,CAAC,CAAC,CAAC;MACHvC,GAAG,GAAGW,qBAAqB,CAACuB,IAAI,CAAC;IACnC,CAAC;IAEDlC,GAAG,GAAGW,qBAAqB,CAACuB,IAAI,CAAC;IACjC,OAAO,MAAMtB,oBAAoB,CAACZ,GAAG,CAAC;EACxC,CAAC,EAAE,CAACa,SAAS,CAACnD,MAAM,CAAC,CAAC;;EAEtB;EACA,MAAM8E,MAAM,GAAGlI,OAAO,CAAC,MACrB8C,KAAK,CAACgF,OAAO,CAAC,CAACjB,GAAG,EAAEvC,CAAC,KAAK;IACxB,IAAIxD,WAAW,KAAK,SAAS,IAAIkC,YAAY,CAACmF,QAAQ,CAAC7D,CAAC,CAAC,EAAE,OAAO,EAAE;IACpE,OAAOuC,GAAG,CAAC3F,GAAG,CAAC,CAAC4F,IAAI,EAAEvC,CAAC,KAAK;MAAA,IAAA6D,gBAAA;MAC1B,IAAI,CAACtB,IAAI,EAAE,OAAO,IAAI;MACtB,OAAO;QACLM,EAAE,EAAK,KAAK9C,CAAC,IAAIC,CAAC,EAAE;QACpBO,CAAC,EAAMP,CAAC;QACRQ,CAAC,EAAMT,CAAC;QACRM,KAAK,GAAAwD,gBAAA,GAAErH,IAAI,CAAC+F,IAAI,CAACnC,KAAK,CAAC,cAAAyD,gBAAA,cAAAA,gBAAA,GAAI;MAC7B,CAAC;IACH,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;EACpB,CAAC,CAAC,EAAE,CAACxF,KAAK,EAAEE,YAAY,CAC1B,CAAC;EAED,MAAMuF,MAAM,GAAGvI,OAAO,CAAC,MACrBwI,MAAM,CAACC,MAAM,CAAC1F,OAAO,CAAC,CAAC+E,OAAO,CAACH,CAAC,IAAI;IAAA,IAAAe,eAAA;IAClC,MAAMC,GAAG,GAAGhB,CAAC,aAADA,CAAC,wBAAAe,eAAA,GAADf,CAAC,CAAEiB,YAAY,cAAAF,eAAA,uBAAfA,eAAA,CAAiBG,KAAK;IAClC,IAAI,CAACF,GAAG,EAAE,OAAO,EAAE;IACnB,OAAOA,GAAG,CAACb,OAAO,CAAC,CAACjB,GAAG,EAAEiC,EAAE,KACzBjC,GAAG,CAAC3F,GAAG,CAAC,CAACM,CAAC,EAAEuH,EAAE,KAAK;MAAA,IAAAC,OAAA;MACjB,IAAI,CAACxH,CAAC,EAAE,OAAO,IAAI;MACnB,MAAMyH,EAAE,GAAGtB,CAAC,CAAC7C,CAAC,GAAGiE,EAAE;QAAEG,EAAE,GAAGvB,CAAC,CAAC5C,CAAC,GAAG+D,EAAE;MAClC,IACEG,EAAE,GAAG,CAAC,IAAIA,EAAE,IAAI5F,IAAI,IACpB6F,EAAE,GAAG,CAAC,IAAIA,EAAE,IAAI/F,IAAI,IACnBrC,WAAW,KAAK,SAAS,IAAIkC,YAAY,CAACmF,QAAQ,CAACe,EAAE,CAAE,EACxD,OAAO,IAAI;MACb,OAAO;QACL9B,EAAE,EAAK,KAAK6B,EAAE,IAAIC,EAAE,EAAE;QACtBpE,CAAC,EAAMmE,EAAE;QACTlE,CAAC,EAAMmE,EAAE;QACTtE,KAAK,GAAAoE,OAAA,GAAEjI,IAAI,CAACS,CAAC,CAAC,cAAAwH,OAAA,cAAAA,OAAA,GAAI;MACpB,CAAC;IACH,CAAC,CAAC,CAACX,MAAM,CAACC,OAAO,CACnB,CAAC;EACH,CAAC,CAAC,EAAE,CAACvF,OAAO,EAAEM,IAAI,EAAEF,IAAI,EAAEH,YAAY,CACxC,CAAC;;EAED;EACA,MAAMmG,KAAK,GAAGA,CAAC;IAAErE,CAAC;IAAEC,CAAC;IAAEH;EAAM,CAAC,kBAC5BnE,OAAA,CAACH,KAAK;IAACwE,CAAC,EAAEA,CAAC,GAAGpE,IAAK;IAACqE,CAAC,EAAEA,CAAC,GAAGrE,IAAK;IAAC0I,SAAS,EAAE,KAAM;IAAAC,QAAA,gBAEhD5I,OAAA,CAACF,IAAI;MACH+I,KAAK,EAAE5I,IAAK;MACZ6I,MAAM,EAAE7I,IAAK;MACb8I,IAAI,EAAC,aAAa;MAClBC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAE,GAAI;MACjBC,YAAY,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAEFtJ,OAAA,CAACF,IAAI;MACHuE,CAAC,EAAE,CAAE;MACLC,CAAC,EAAE,CAAE;MACLuE,KAAK,EAAE5I,IAAI,GAAG,CAAE;MAChB6I,MAAM,EAAE7I,IAAI,GAAG,CAAE;MACjBiJ,YAAY,EAAE,GAAI;MAClBK,4BAA4B,EAAE;QAAElF,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE,CAAE;MAC7CkF,0BAA0B,EAAE;QAAEnF,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAErE;MAAK,CAAE;MAC9CwJ,4BAA4B,EAAE,CAC5B,CAAC,EAAE/H,KAAK,CAACyC,KAAK,CAAC,EACf,IAAI,EAAEvC,GAAG,CAACuC,KAAK,CAAC,EAChB,CAAC,EAAErC,IAAI,CAACqC,KAAK,CAAC;IACd;MAAAgF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEFtJ,OAAA,CAACF,IAAI;MACHuE,CAAC,EAAEpE,IAAI,GAAG,IAAK;MACfqE,CAAC,EAAErE,IAAI,GAAG,IAAK;MACf4I,KAAK,EAAE5I,IAAI,GAAG,GAAI;MAClB6I,MAAM,EAAE7I,IAAI,GAAG,IAAK;MACpBiJ,YAAY,EAAEjJ,IAAI,GAAG,IAAK;MAC1ByJ,4BAA4B,EAAE;QAAErF,CAAC,EAAEpE,IAAI,GAAG,IAAI;QAAEqE,CAAC,EAAErE,IAAI,GAAG;MAAI,CAAE;MAChE0J,6BAA6B,EAAE,CAAE;MACjCC,0BAA0B,EAAE;QAAEvF,CAAC,EAAEpE,IAAI,GAAG,IAAI;QAAEqE,CAAC,EAAErE,IAAI,GAAG;MAAI,CAAE;MAC9D4J,2BAA2B,EAAE5J,IAAI,GAAG,IAAK;MACzC6J,4BAA4B,EAAE,CAC5B,CAAC,EAAE,wBAAwB,EAC3B,CAAC,EAAE,qBAAqB;IACxB;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CACR;;EAED;EACA,oBACEtJ,OAAA;IAAK+J,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEnB,KAAK,EAAEhG,CAAC;MAAEiG,MAAM,EAAEhG;IAAE,CAAE;IAAA8F,QAAA,gBACxD5I,OAAA,CAACL,KAAK;MAACkJ,KAAK,EAAEhG,CAAE;MAACiG,MAAM,EAAEhG,CAAE;MAAA8F,QAAA,eACzB5I,OAAA,CAACJ,KAAK;QAAC+I,SAAS,EAAE,KAAM;QAAAC,QAAA,gBAEtB5I,OAAA,CAACF,IAAI;UAACuE,CAAC,EAAE,CAAE;UAACC,CAAC,EAAE,CAAE;UAACuE,KAAK,EAAEhG,CAAE;UAACiG,MAAM,EAAEhG,CAAE;UAACiG,IAAI,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrDtJ,OAAA,CAACH,KAAK;UAACoK,OAAO,EAAE,IAAK;UAAArB,QAAA,GAClBsB,KAAK,CAACxH,IAAI,GAAC,CAAC,CAAC,CAACqG,IAAI,CAAC,CAAC,CAACtI,GAAG,CAAC,CAAC0J,CAAC,EAAEzJ,CAAC,kBAC7BV,OAAA,CAACF,IAAI;YAEHuE,CAAC,EAAE,CAAE;YACLC,CAAC,EAAE5D,CAAC,GAAGT,IAAK;YACZ4I,KAAK,EAAEhG,CAAE;YACTiG,MAAM,EAAE,CAAE;YACVC,IAAI,EAAC;UAAM,GALN,IAAIrI,CAAC,EAAE;YAAAyI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMb,CACF,CAAC,EACDY,KAAK,CAACtH,IAAI,GAAC,CAAC,CAAC,CAACmG,IAAI,CAAC,CAAC,CAACtI,GAAG,CAAC,CAAC0J,CAAC,EAAEzJ,CAAC,kBAC7BV,OAAA,CAACF,IAAI;YAEHuE,CAAC,EAAE3D,CAAC,GAAGT,IAAK;YACZqE,CAAC,EAAE,CAAE;YACLuE,KAAK,EAAE,CAAE;YACTC,MAAM,EAAEhG,CAAE;YACViG,IAAI,EAAC;UAAM,GALN,IAAIrI,CAAC,EAAE;YAAAyI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMb,CACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,EAGP7B,MAAM,CAAChH,GAAG,CAAC2J,CAAC,iBAAIpK,OAAA,CAAC0I,KAAK;UAAA,GAAgB0B;QAAC,GAAXA,CAAC,CAACzD,EAAE;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,CAAC,EAC5CxB,MAAM,CAACrH,GAAG,CAAC2J,CAAC,iBAAIpK,OAAA,CAAC0I,KAAK;UAAA,GAAgB0B;QAAC,GAAXA,CAAC,CAACzD,EAAE;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,CAAC,EAG5CxD,SAAS,CAACrF,GAAG,CAACyG,CAAC,iBACdlH,OAAA,CAACF,IAAI;UAEHuE,CAAC,EAAE6C,CAAC,CAAC7C,CAAE;UACPC,CAAC,EAAE4C,CAAC,CAAC5C,CAAE;UACPuE,KAAK,EAAE3B,CAAC,CAACN,CAAE;UACXkC,MAAM,EAAE5B,CAAC,CAAC1G,CAAE;UACZuI,IAAI,EAAE7B,CAAC,CAAC/C,KAAM;UACd8F,OAAO,EAAE/C,CAAC,CAACD,IAAI,GAAG,EAAG;UACrB0B,SAAS,EAAE;QAAM,GAPZzB,CAAC,CAACP,EAAE;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGRtJ,OAAA;MACEqK,GAAG,EAAE9G,cAAe;MACpBsF,KAAK,EAAEhG,CAAE;MACTiG,MAAM,EAAEhG,CAAE;MACViH,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBM,GAAG,EAAE,CAAC;QACNC,IAAI,EAAE,CAAC;QACPC,aAAa,EAAE;MACjB;IAAE;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC9G,EAAA,CAjSuBJ,UAAU;AAAAqI,GAAA,GAAVrI,UAAU;AAAA,IAAAT,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAsI,GAAA;AAAAC,YAAA,CAAA/I,EAAA;AAAA+I,YAAA,CAAA7I,GAAA;AAAA6I,YAAA,CAAA3I,GAAA;AAAA2I,YAAA,CAAAzI,GAAA;AAAAyI,YAAA,CAAAvI,GAAA;AAAAuI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
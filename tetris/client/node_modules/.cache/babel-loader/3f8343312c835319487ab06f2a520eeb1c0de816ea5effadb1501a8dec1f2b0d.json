{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/BoardStage.jsx\",\n  _s = $RefreshSig$();\n// client/src/BoardStage.jsx\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Konva from 'konva';\nimport { Stage, Layer, Group, Rect } from 'react-konva';\n\n/* ===== tweakable constants ======================================= */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CELL = 30;\nconst PARTICLES_PER_BLOCK = 75; // explosion density\nconst LOCK_EFFECT = 'tint'; // 'tint' (brighten) or 'mute' (darken)\nconst LOCK_FLASH_MS = 120; // ms duration of lock flash\nconst CLEAR_STYLE = 'explode'; // in case we want to add support for another clear animnation\n/* ================================================================= */\n\n/* canonical NES/TGM colors */\nconst BASE = {\n  1: '#00FFFF',\n  2: '#0000FF',\n  3: '#FF7700',\n  4: '#FFFF00',\n  5: '#00FF00',\n  6: '#FF0000',\n  7: '#AA00FF'\n};\n\n/* color helpers */\nconst toRgb = h => [0, 2, 4].map(i => parseInt(h.slice(1 + i, 3 + i), 16));\nconst toHex = rgb => '#' + rgb.map(v => Math.max(0, Math.min(255, Math.round(v))).toString(16).padStart(2, '0')).join('');\nconst mix = (h, tgt, t) => toHex(toRgb(h).map((v, i) => v + (tgt[i] - v) * t));\nconst LIGHT = h => mix(h, [255, 255, 255], 0.5);\n_c = LIGHT;\nconst MID = h => mix(h, [255, 255, 255], 0.25);\n_c2 = MID;\nconst DARK = h => mix(h, [0, 0, 0], 0.5);\n_c3 = DARK;\nconst TINT = h => mix(h, [255, 255, 255], 0.6);\n_c4 = TINT;\nconst MUTE = h => mix(h, [0, 0, 0], 0.6);\n_c5 = MUTE;\nexport default function BoardStage({\n  board = [],\n  players = {},\n  linesToClear = []\n}) {\n  _s();\n  var _board$;\n  const rows = board.length;\n  const cols = ((_board$ = board[0]) === null || _board$ === void 0 ? void 0 : _board$.length) || 0;\n  const W = cols * CELL;\n  const H = rows * CELL;\n\n  /* ─── preload sounds ───────────────────────────────────────────── */\n  const lockSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/lock_sound.wav`));\n  const clearSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/clear.mp3`));\n  useEffect(() => {\n    [lockSfx, clearSfx].forEach(ref => {\n      ref.current.preload = 'auto';\n      ref.current.load();\n    });\n  }, []);\n\n  /* ─── lock‑flash canvas overlay ─────────────────────────────────── */\n  const flashCanvasRef = useRef(null);\n  const [lockFlashes, setLockFlashes] = useState([]);\n  useEffect(() => {\n    var _flashCanvasRef$curre;\n    const prev = ((_flashCanvasRef$curre = flashCanvasRef.current) === null || _flashCanvasRef$curre === void 0 ? void 0 : _flashCanvasRef$curre.__prevBoard) || [];\n    const fresh = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        var _prev$r, _board$r;\n        if (!((_prev$r = prev[r]) !== null && _prev$r !== void 0 && _prev$r[c]) && (_board$r = board[r]) !== null && _board$r !== void 0 && _board$r[c]) {\n          const base = BASE[board[r][c].value] || '#888';\n          const color = LOCK_EFFECT === 'tint' ? TINT(base) : MUTE(base);\n          fresh.push({\n            id: `${c}-${r}-${Date.now()}`,\n            x: c,\n            y: r,\n            color,\n            ts: Date.now()\n          });\n        }\n      }\n    }\n    if (fresh.length) {\n      lockSfx.current.currentTime = 0;\n      lockSfx.current.play().catch(() => {});\n      fresh.forEach(f => {\n        setLockFlashes(fs => [...fs, f]);\n        setTimeout(() => {\n          setLockFlashes(fs => fs.filter(x => x.id !== f.id));\n        }, LOCK_FLASH_MS);\n      });\n    }\n    flashCanvasRef.current.__prevBoard = board.map(row => [...row]);\n  }, [board, rows, cols]);\n  useEffect(() => {\n    const canvas = flashCanvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let raf;\n    const draw = () => {\n      ctx.clearRect(0, 0, W, H);\n      const now = Date.now();\n      lockFlashes.forEach(f => {\n        const age = now - f.ts;\n        if (age < LOCK_FLASH_MS) {\n          const alphaHex = Math.floor((1 - age / LOCK_FLASH_MS) * 255).toString(16).padStart(2, '0');\n          ctx.fillStyle = f.color + alphaHex;\n          ctx.fillRect(f.x * CELL, f.y * CELL, CELL, CELL);\n        }\n      });\n      raf = requestAnimationFrame(draw);\n    };\n    raf = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(raf);\n  }, [W, H, lockFlashes]);\n\n  /* ─── explosion on line‑clear ──────────────────────────────────── */\n  const [particles, setParticles] = useState([]);\n  const clearHandled = useRef(false);\n  useEffect(() => {\n    if (!linesToClear.length) {\n      clearHandled.current = false;\n      return;\n    }\n    if (clearHandled.current) return;\n    clearHandled.current = true;\n    clearSfx.current.currentTime = 0;\n    clearSfx.current.play().catch(() => {});\n    const rowsSet = new Set(linesToClear);\n    const newParts = [];\n    board.forEach((row, r) => {\n      row.forEach((cell, c) => {\n        if (!cell || !rowsSet.has(r)) return;\n        const base = BASE[cell.value] || '#888';\n        for (let i = 0; i < PARTICLES_PER_BLOCK; i++) {\n          const ang = Math.random() * 2 * Math.PI;\n          const spd = 2 + Math.random() * 2;\n          newParts.push({\n            id: `p-${r}-${c}-${i}-${Date.now()}`,\n            x: c * CELL + Math.random() * CELL,\n            y: r * CELL + Math.random() * CELL,\n            w: 2,\n            h: 2,\n            color: base,\n            dx: Math.cos(ang) * spd,\n            dy: Math.sin(ang) * spd - 0.3,\n            life: 40\n          });\n        }\n      });\n    });\n    setParticles(ps => [...ps, ...newParts]);\n  }, [linesToClear, board]);\n\n  /* ─── particle update loop ───────────────────────────────────── */\n  useEffect(() => {\n    if (!particles.length) return;\n    let raf;\n    const step = () => {\n      setParticles(ps => ps.flatMap(p => {\n        const nx = p.x + p.dx,\n          ny = p.y + p.dy + 0.35,\n          nl = p.life - 1;\n        return nl > 0 ? [{\n          ...p,\n          x: nx,\n          y: ny,\n          life: nl\n        }] : [];\n      }));\n      raf = requestAnimationFrame(step);\n    };\n    raf = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(raf);\n  }, [particles.length]);\n\n  /* ─── memoise locked & active cells ───────────────────────────── */\n  const locked = useMemo(() => board.flatMap((row, r) => {\n    if (CLEAR_STYLE === 'explode' && linesToClear.includes(r)) return [];\n    return row.map((cell, c) => {\n      if (!cell) return null;\n      return {\n        id: `l-${r}-${c}`,\n        x: c,\n        y: r,\n        color: BASE[cell.value] || '#888'\n      };\n    }).filter(Boolean);\n  }), [board, linesToClear]);\n  const active = useMemo(() => Object.values(players).flatMap(p => {\n    var _p$currentPiece;\n    if (p !== null && p !== void 0 && p.isWaitingForNextPiece) return [];\n    const shp = p === null || p === void 0 ? void 0 : (_p$currentPiece = p.currentPiece) === null || _p$currentPiece === void 0 ? void 0 : _p$currentPiece.shape;\n    if (!shp) return [];\n    return shp.flatMap((row, dr) => row.map((v, dc) => {\n      if (!v) return null;\n      const gx = p.x + dc,\n        gy = p.y + dr;\n      if (gx < 0 || gx >= cols || gy < 0 || gy >= rows || CLEAR_STYLE === 'explode' && linesToClear.includes(gy)) return null;\n      // Skip rendering if the board already has a locked cell here\n      if (board[gy] && board[gy][gx] !== 0) return null;\n      return {\n        id: `a-${gx}-${gy}`,\n        x: gx,\n        y: gy,\n        color: BASE[v] || '#888'\n      };\n    }).filter(Boolean));\n  }), [players, cols, rows, linesToClear]);\n\n  /* ─── glossy Block component ───────────────────────────────────── */\n  const Block = ({\n    x,\n    y,\n    color\n  }) => /*#__PURE__*/_jsxDEV(Group, {\n    x: x * CELL,\n    y: y * CELL,\n    listening: false,\n    children: [/*#__PURE__*/_jsxDEV(Rect, {\n      width: CELL,\n      height: CELL,\n      fill: \"transparent\",\n      stroke: \"#666\",\n      strokeWidth: 1.2,\n      cornerRadius: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect, {\n      x: 1,\n      y: 1,\n      width: CELL - 2,\n      height: CELL - 2,\n      cornerRadius: 2.5,\n      fillLinearGradientStartPoint: {\n        x: 0,\n        y: 0\n      },\n      fillLinearGradientEndPoint: {\n        x: 0,\n        y: CELL\n      },\n      fillLinearGradientColorStops: [0, LIGHT(color), 0.45, MID(color), 1, DARK(color)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect, {\n      x: CELL * 0.15,\n      y: CELL * 0.05,\n      width: CELL * 0.7,\n      height: CELL * 0.25,\n      cornerRadius: CELL * 0.35,\n      fillRadialGradientStartPoint: {\n        x: CELL * 0.35,\n        y: CELL * 0.2\n      },\n      fillRadialGradientEndPoint: {\n        x: CELL * 0.35,\n        y: CELL * 0.2\n      },\n      fillRadialGradientStartRadius: 1,\n      fillRadialGradientEndRadius: CELL * 0.35,\n      fillRadialGradientColorStops: [0, 'rgba(255,255,255,0.85)', 1, 'rgba(255,255,255,0)']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n\n  /* ─── render ───────────────────────────────────────────────────── */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      width: W,\n      height: H\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      width: W,\n      height: H,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        listening: false,\n        children: [/*#__PURE__*/_jsxDEV(Rect, {\n          x: 0,\n          y: 0,\n          width: W,\n          height: H,\n          fill: \"#111\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          opacity: 0.12,\n          children: [Array(rows + 1).fill().map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: 0,\n            y: i * CELL,\n            width: W,\n            height: 1,\n            fill: \"#888\"\n          }, `h${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)), Array(cols + 1).fill().map((_, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: i * CELL,\n            y: 0,\n            width: 1,\n            height: H,\n            fill: \"#888\"\n          }, `v${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), locked.map(b => /*#__PURE__*/_jsxDEV(Block, {\n          ...b\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 28\n        }, this)), active.map(b => /*#__PURE__*/_jsxDEV(Block, {\n          ...b\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 28\n        }, this)), particles.map(p => /*#__PURE__*/_jsxDEV(Rect, {\n          x: p.x,\n          y: p.y,\n          width: p.w,\n          height: p.h,\n          fill: p.color,\n          opacity: p.life / 40,\n          listening: false\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: flashCanvasRef,\n      width: W,\n      height: H,\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardStage, \"I7jK0SsuPbn98ijVA8LJL5UOqes=\");\n_c6 = BoardStage;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LIGHT\");\n$RefreshReg$(_c2, \"MID\");\n$RefreshReg$(_c3, \"DARK\");\n$RefreshReg$(_c4, \"TINT\");\n$RefreshReg$(_c5, \"MUTE\");\n$RefreshReg$(_c6, \"BoardStage\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Konva","Stage","Layer","Group","Rect","jsxDEV","_jsxDEV","CELL","PARTICLES_PER_BLOCK","LOCK_EFFECT","LOCK_FLASH_MS","CLEAR_STYLE","BASE","toRgb","h","map","i","parseInt","slice","toHex","rgb","v","Math","max","min","round","toString","padStart","join","mix","tgt","t","LIGHT","_c","MID","_c2","DARK","_c3","TINT","_c4","MUTE","_c5","BoardStage","board","players","linesToClear","_s","_board$","rows","length","cols","W","H","lockSfx","Audio","process","env","PUBLIC_URL","clearSfx","forEach","ref","current","preload","load","flashCanvasRef","lockFlashes","setLockFlashes","_flashCanvasRef$curre","prev","__prevBoard","fresh","r","c","_prev$r","_board$r","base","value","color","push","id","Date","now","x","y","ts","currentTime","play","catch","f","fs","setTimeout","filter","row","canvas","ctx","getContext","raf","draw","clearRect","age","alphaHex","floor","fillStyle","fillRect","requestAnimationFrame","cancelAnimationFrame","particles","setParticles","clearHandled","rowsSet","Set","newParts","cell","has","ang","random","PI","spd","w","dx","cos","dy","sin","life","ps","step","flatMap","p","nx","ny","nl","locked","includes","Boolean","active","Object","values","_p$currentPiece","isWaitingForNextPiece","shp","currentPiece","shape","dr","dc","gx","gy","Block","listening","children","width","height","fill","stroke","strokeWidth","cornerRadius","fileName","_jsxFileName","lineNumber","columnNumber","fillLinearGradientStartPoint","fillLinearGradientEndPoint","fillLinearGradientColorStops","fillRadialGradientStartPoint","fillRadialGradientEndPoint","fillRadialGradientStartRadius","fillRadialGradientEndRadius","fillRadialGradientColorStops","style","position","opacity","Array","_","b","top","left","pointerEvents","_c6","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/BoardStage.jsx"],"sourcesContent":["// client/src/BoardStage.jsx\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Konva from 'konva';\nimport { Stage, Layer, Group, Rect } from 'react-konva';\n\n/* ===== tweakable constants ======================================= */\nconst CELL                = 30;\nconst PARTICLES_PER_BLOCK = 75;   // explosion density\nconst LOCK_EFFECT         = 'tint';   // 'tint' (brighten) or 'mute' (darken)\nconst LOCK_FLASH_MS       = 120;   // ms duration of lock flash\nconst CLEAR_STYLE         = 'explode'; // in case we want to add support for another clear animnation\n/* ================================================================= */\n\n/* canonical NES/TGM colors */\nconst BASE = {\n  1: '#00FFFF', 2: '#0000FF', 3: '#FF7700',\n  4: '#FFFF00', 5: '#00FF00', 6: '#FF0000', 7: '#AA00FF'\n};\n\n/* color helpers */\nconst toRgb = h => [0,2,4].map(i => parseInt(h.slice(1+i,3+i), 16));\nconst toHex = rgb => '#' + rgb.map(v =>\n  Math.max(0, Math.min(255, Math.round(v)))\n    .toString(16).padStart(2,'0')\n).join('');\nconst mix   = (h, tgt, t) => toHex(toRgb(h).map((v,i) => v + (tgt[i] - v) * t));\nconst LIGHT = h => mix(h, [255,255,255], 0.5);\nconst MID   = h => mix(h, [255,255,255], 0.25);\nconst DARK  = h => mix(h, [0,0,0], 0.5);\nconst TINT  = h => mix(h, [255,255,255], 0.6);\nconst MUTE  = h => mix(h, [0,0,0], 0.6);\n\nexport default function BoardStage({ board = [], players = {}, linesToClear = [] }) {\n  const rows = board.length;\n  const cols = board[0]?.length || 0;\n  const W = cols * CELL;\n  const H = rows * CELL;\n\n  /* ─── preload sounds ───────────────────────────────────────────── */\n  const lockSfx  = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/lock_sound.wav`));\n  const clearSfx = useRef(new Audio(`${process.env.PUBLIC_URL}/sounds/clear.mp3`));\n  useEffect(() => {\n    [lockSfx, clearSfx].forEach(ref => {\n      ref.current.preload = 'auto';\n      ref.current.load();\n    });\n  }, []);\n\n  /* ─── lock‑flash canvas overlay ─────────────────────────────────── */\n  const flashCanvasRef = useRef(null);\n  const [lockFlashes, setLockFlashes] = useState([]);\n  useEffect(() => {\n    const prev = flashCanvasRef.current?.__prevBoard || [];\n    const fresh = [];\n\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < cols; c++) {\n        if (!prev[r]?.[c] && board[r]?.[c]) {\n          const base  = BASE[board[r][c].value] || '#888';\n          const color = LOCK_EFFECT === 'tint' ? TINT(base) : MUTE(base);\n          fresh.push({ id: `${c}-${r}-${Date.now()}`, x: c, y: r, color, ts: Date.now() });\n        }\n      }\n    }\n    if (fresh.length) {\n      lockSfx.current.currentTime = 0;\n      lockSfx.current.play().catch(() => {});\n      fresh.forEach(f => {\n        setLockFlashes(fs => [...fs, f]);\n        setTimeout(() => {\n          setLockFlashes(fs => fs.filter(x => x.id !== f.id));\n        }, LOCK_FLASH_MS);\n      });\n    }\n    flashCanvasRef.current.__prevBoard = board.map(row => [...row]);\n  }, [board, rows, cols]);\n\n  useEffect(() => {\n    const canvas = flashCanvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    let raf;\n    const draw = () => {\n      ctx.clearRect(0, 0, W, H);\n      const now = Date.now();\n      lockFlashes.forEach(f => {\n        const age = now - f.ts;\n        if (age < LOCK_FLASH_MS) {\n          const alphaHex = Math.floor((1 - age / LOCK_FLASH_MS) * 255)\n            .toString(16)\n            .padStart(2, '0');\n          ctx.fillStyle = f.color + alphaHex;\n          ctx.fillRect(f.x * CELL, f.y * CELL, CELL, CELL);\n        }\n      });\n      raf = requestAnimationFrame(draw);\n    };\n    raf = requestAnimationFrame(draw);\n    return () => cancelAnimationFrame(raf);\n  }, [W, H, lockFlashes]);\n\n  /* ─── explosion on line‑clear ──────────────────────────────────── */\n  const [particles, setParticles] = useState([]);\n  const clearHandled = useRef(false);\n  useEffect(() => {\n    if (!linesToClear.length) {\n      clearHandled.current = false;\n      return;\n    }\n    if (clearHandled.current) return;\n    clearHandled.current = true;\n\n    clearSfx.current.currentTime = 0;\n    clearSfx.current.play().catch(() => {});\n\n    const rowsSet = new Set(linesToClear);\n    const newParts = [];\n    board.forEach((row, r) => {\n      row.forEach((cell, c) => {\n        if (!cell || !rowsSet.has(r)) return;\n        const base = BASE[cell.value] || '#888';\n        for (let i = 0; i < PARTICLES_PER_BLOCK; i++) {\n          const ang = Math.random() * 2 * Math.PI;\n          const spd = 2 + Math.random() * 2;\n          newParts.push({\n            id:   `p-${r}-${c}-${i}-${Date.now()}`,\n            x:    c * CELL + Math.random() * CELL,\n            y:    r * CELL + Math.random() * CELL,\n            w:    2, h: 2,\n            color: base,\n            dx:   Math.cos(ang) * spd,\n            dy:   Math.sin(ang) * spd - 0.3,\n            life: 40\n          });\n        }\n      });\n    });\n    setParticles(ps => [...ps, ...newParts]);\n  }, [linesToClear, board]);\n\n  /* ─── particle update loop ───────────────────────────────────── */\n  useEffect(() => {\n    if (!particles.length) return;\n    let raf;\n    const step = () => {\n      setParticles(ps =>\n        ps.flatMap(p => {\n          const nx = p.x + p.dx,\n                ny = p.y + p.dy + 0.35,\n                nl = p.life - 1;\n          return nl > 0 ? [{ ...p, x: nx, y: ny, life: nl }] : [];\n        })\n      );\n      raf = requestAnimationFrame(step);\n    };\n    raf = requestAnimationFrame(step);\n    return () => cancelAnimationFrame(raf);\n  }, [particles.length]);\n\n  /* ─── memoise locked & active cells ───────────────────────────── */\n  const locked = useMemo(() =>\n    board.flatMap((row, r) => {\n      if (CLEAR_STYLE === 'explode' && linesToClear.includes(r)) return [];\n      return row.map((cell, c) => {\n        if (!cell) return null;\n        return { id: `l-${r}-${c}`, x: c, y: r, color: BASE[cell.value] || '#888' };\n      }).filter(Boolean);\n    }), [board, linesToClear]\n  );\n\n  const active = useMemo(() =>\n    Object.values(players).flatMap(p => {\n      if (p?.isWaitingForNextPiece) return [];\n      const shp = p?.currentPiece?.shape;\n      if (!shp) return [];\n      return shp.flatMap((row, dr) =>\n        row.map((v, dc) => {\n          if (!v) return null;\n          const gx = p.x + dc, gy = p.y + dr;\n          if (\n            gx < 0 || gx >= cols ||\n            gy < 0 || gy >= rows ||\n            (CLEAR_STYLE === 'explode' && linesToClear.includes(gy))\n          ) return null;\n          // Skip rendering if the board already has a locked cell here\n          if (board[gy] && board[gy][gx] !== 0) return null;\n          return { id: `a-${gx}-${gy}`, x: gx, y: gy, color: BASE[v] || '#888' };\n        }).filter(Boolean)\n      );\n    }), [players, cols, rows, linesToClear]\n  );\n\n  /* ─── glossy Block component ───────────────────────────────────── */\n  const Block = ({ x, y, color }) => (\n    <Group x={x * CELL} y={y * CELL} listening={false}>\n      <Rect\n        width={CELL} height={CELL}\n        fill=\"transparent\" stroke=\"#666\" strokeWidth={1.2}\n        cornerRadius={3}\n      />\n      <Rect\n        x={1} y={1} width={CELL - 2} height={CELL - 2}\n        cornerRadius={2.5}\n        fillLinearGradientStartPoint={{ x: 0, y: 0 }}\n        fillLinearGradientEndPoint={{ x: 0, y: CELL }}\n        fillLinearGradientColorStops={[\n          0, LIGHT(color),\n          0.45, MID(color),\n          1, DARK(color)\n        ]}\n      />\n      <Rect\n        x={CELL * 0.15} y={CELL * 0.05}\n        width={CELL * 0.7} height={CELL * 0.25}\n        cornerRadius={CELL * 0.35}\n        fillRadialGradientStartPoint={{ x: CELL * 0.35, y: CELL * 0.2 }}\n        fillRadialGradientEndPoint={{ x: CELL * 0.35, y: CELL * 0.2 }}\n        fillRadialGradientStartRadius={1}\n        fillRadialGradientEndRadius={CELL * 0.35}\n        fillRadialGradientColorStops={[\n          0, 'rgba(255,255,255,0.85)',\n          1, 'rgba(255,255,255,0)'\n        ]}\n      />\n    </Group>\n  );\n\n  /* ─── render ───────────────────────────────────────────────────── */\n  return (\n    <div style={{ position: 'relative', width: W, height: H }}>\n      <Stage width={W} height={H}>\n        <Layer listening={false}>\n          <Rect x={0} y={0} width={W} height={H} fill=\"#111\" />\n          <Group opacity={0.12}>\n            {Array(rows + 1).fill().map((_, i) => (\n              <Rect key={`h${i}`} x={0} y={i * CELL} width={W} height={1} fill=\"#888\" />\n            ))}\n            {Array(cols + 1).fill().map((_, i) => (\n              <Rect key={`v${i}`} x={i * CELL} y={0} width={1} height={H} fill=\"#888\" />\n            ))}\n          </Group>\n\n          {/* locked & active */}\n          {locked.map(b => <Block key={b.id} {...b} />)}\n          {active.map(b => <Block key={b.id} {...b} />)}\n\n          {/* explosion particles */}\n          {particles.map(p => (\n            <Rect\n              key={p.id}\n              x={p.x} y={p.y}\n              width={p.w} height={p.h}\n              fill={p.color}\n              opacity={p.life / 40}\n              listening={false}\n            />\n          ))}\n        </Layer>\n      </Stage>\n\n      {/* lock‑flash overlay */}\n      <canvas\n        ref={flashCanvasRef}\n        width={W}\n        height={H}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none'\n        }}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport GameBoard from './GameBoard';\nimport HomeScreen from './HomeScreen';\nimport GameOverScreen from './GameOverScreen';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [playerList, setPlayerList] = useState([]);\n  const [gameOverData, setGameOverData] = useState(null);\n  const [isRejoining, setIsRejoining] = useState(false);\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server! My socket ID is:', socket.id);\n      setConnectionStatus('connected');\n    });\n    socket.on('connect_error', error => {\n      console.log('Connection error:', error);\n      setConnectionStatus('error: ' + error.message);\n    });\n    socket.on('init', data => {\n      console.log('Received init data:', data);\n      setGameState(data);\n      updatePlayerList(data.players);\n\n      // Set rejoining flag if applicable\n      if (data.isRejoining) {\n        setIsRejoining(true);\n      }\n    });\n    socket.on('gameState', data => {\n      console.log('Received gameState update:', data);\n      setGameState(data);\n      updatePlayerList(data.players);\n\n      // Reset gameOverData if we're back at homescreen\n      if (data.appPhase === 'homescreen') {\n        setGameOverData(null);\n      }\n    });\n    socket.on('gameOver', data => {\n      console.log('Game over:', data);\n      setGameOverData(data);\n    });\n\n    // Cleanup event listeners when component unmounts\n    return () => {\n      socket.off('connect');\n      socket.off('connect_error');\n      socket.off('init');\n      socket.off('gameState');\n      socket.off('gameOver');\n    };\n  }, []);\n\n  // Update the player list for display\n  const updatePlayerList = useCallback(players => {\n    const list = Object.entries(players).map(([id, player]) => ({\n      id: id.substring(0, 4),\n      score: player.score,\n      color: player.color,\n      isCurrentPlayer: id === socket.id,\n      playerNumber: player.playerNumber\n    }));\n    setPlayerList(list);\n  }, []);\n\n  // Handle keyboard input (only during gameplay)\n  // Update the handleKeyDown function with better X key handling\n  const handleKeyDown = useCallback(e => {\n    // Handle X key for readiness regardless of game phase\n    if (e.key === 'x' || e.key === 'X') {\n      if (gameState && gameState.appPhase === 'homescreen') {\n        const isCurrentlyReady = gameState.readyPlayers.includes(socket.id);\n        console.log('X key pressed, toggling ready state. Current ready:', isCurrentlyReady);\n        socket.emit('playerReady', !isCurrentlyReady);\n        e.preventDefault();\n        return;\n      }\n    }\n\n    // Only process other game controls if in playing phase\n    if (gameState && gameState.appPhase === 'playing') {\n      let action = null;\n      let dasAction = null;\n      switch (e.key) {\n        case 'ArrowLeft':\n          action = {\n            type: 'moveLeft'\n          };\n          dasAction = {\n            type: 'startDAS',\n            direction: 'left'\n          };\n          break;\n        case 'ArrowRight':\n          action = {\n            type: 'moveRight'\n          };\n          dasAction = {\n            type: 'startDAS',\n            direction: 'right'\n          };\n          break;\n        case 'ArrowDown':\n          action = {\n            type: 'softDrop'\n          };\n          break;\n        case 'ArrowUp':\n        case 'z':\n        case 'Z':\n          action = {\n            type: 'rotate'\n          };\n          break;\n        case ' ':\n          // Space for hard drop\n          action = {\n            type: 'hardDrop'\n          };\n          break;\n        default:\n          break;\n      }\n      if (action) {\n        socket.emit('playerAction', action);\n        if (dasAction) {\n          socket.emit('playerAction', dasAction);\n        }\n        e.preventDefault();\n      }\n    }\n  }, [gameState]);\n  const handleKeyUp = useCallback(e => {\n    if (gameState && gameState.appPhase === 'playing') {\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        socket.emit('playerAction', {\n          type: 'endDAS'\n        });\n      }\n      if (e.key === 'ArrowDown') {\n        socket.emit('playerAction', {\n          type: 'endSoftDrop'\n        });\n      }\n    }\n  }, [gameState]);\n\n  // Event handlers for HomeScreen\n  const handlePlayerReady = useCallback(isReady => {\n    socket.emit('playerReady', isReady);\n  }, []);\n  const handleSetGameMode = useCallback(mode => {\n    socket.emit('setGameMode', mode);\n  }, []);\n  const handleStartGame = useCallback(() => {\n    socket.emit('startGame');\n  }, []);\n\n  // Auto-focus the game div on mount and when game state changes\n  useEffect(() => {\n    const gameDiv = document.getElementById('game-area');\n    if (gameDiv) {\n      gameDiv.focus();\n    }\n  }, [gameState]);\n  if (!gameState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tetristributed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connection status: \", connectionStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for game state from server...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"game-area\",\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    tabIndex: \"0\",\n    style: {\n      outline: 'none',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [gameState.appPhase === 'homescreen' && /*#__PURE__*/_jsxDEV(HomeScreen, {\n      players: gameState.players,\n      currentPlayerId: socket.id,\n      readyPlayers: gameState.readyPlayers || [],\n      onReady: handlePlayerReady,\n      onStartGame: handleStartGame,\n      onSetGameMode: handleSetGameMode,\n      gameMode: gameState.gameMode,\n      gameInProgress: gameState.gameInProgress,\n      isRejoining: isRejoining\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), gameState.appPhase === 'playing' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tetristributed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected as player: \", socket.id && socket.id.substring(0, 4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n          board: gameState.board,\n          players: gameState.players,\n          currentPlayerId: socket.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            minWidth: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: playerList.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                margin: '8px 0',\n                padding: '8px',\n                backgroundColor: player.isCurrentPlayer ? '#444' : '#333',\n                borderLeft: `4px solid ${player.color}`,\n                borderRadius: '4px'\n              },\n              children: [\"Player \", player.id, \" \", player.isCurrentPlayer ? '(You)' : '', \": \", player.score, \" points\"]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '20px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Game Mode: \", gameState.gameMode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameOverData && /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      gameOverData: gameOverData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"woYVAmGeJ0FCjCWFFxF2Mdbo8lw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","io","GameBoard","HomeScreen","GameOverScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","App","_s","gameState","setGameState","connectionStatus","setConnectionStatus","playerList","setPlayerList","gameOverData","setGameOverData","isRejoining","setIsRejoining","on","console","log","id","error","message","data","updatePlayerList","players","appPhase","off","list","Object","entries","map","player","substring","score","color","isCurrentPlayer","playerNumber","handleKeyDown","e","key","isCurrentlyReady","readyPlayers","includes","emit","preventDefault","action","dasAction","type","direction","handleKeyUp","handlePlayerReady","isReady","handleSetGameMode","mode","handleStartGame","gameDiv","document","getElementById","focus","children","fileName","_jsxFileName","lineNumber","columnNumber","onKeyDown","onKeyUp","tabIndex","style","outline","display","flexDirection","alignItems","currentPlayerId","onReady","onStartGame","onSetGameMode","gameMode","gameInProgress","gap","marginBottom","board","minWidth","listStyle","padding","margin","backgroundColor","borderLeft","borderRadius","marginTop","_c","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport GameBoard from './GameBoard';\nimport HomeScreen from './HomeScreen';\nimport GameOverScreen from './GameOverScreen';\n\nconst socket = io('http://localhost:3001');\n\nfunction App() {\n  const [gameState, setGameState] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('connecting');\n  const [playerList, setPlayerList] = useState([]);\n  const [gameOverData, setGameOverData] = useState(null);\n  const [isRejoining, setIsRejoining] = useState(false);\n\n  useEffect(() => {\n    socket.on('connect', () => {\n      console.log('Connected to server! My socket ID is:', socket.id);\n      setConnectionStatus('connected');\n    });\n  \n    socket.on('connect_error', (error) => {\n      console.log('Connection error:', error);\n      setConnectionStatus('error: ' + error.message);\n    });\n\n    socket.on('init', (data) => {\n      console.log('Received init data:', data);\n      setGameState(data);\n      updatePlayerList(data.players);\n      \n      // Set rejoining flag if applicable\n      if (data.isRejoining) {\n        setIsRejoining(true);\n      }\n    });\n  \n    socket.on('gameState', (data) => {\n      console.log('Received gameState update:', data);\n      setGameState(data);\n      updatePlayerList(data.players);\n      \n      // Reset gameOverData if we're back at homescreen\n      if (data.appPhase === 'homescreen') {\n        setGameOverData(null);\n      }\n    });\n    \n    socket.on('gameOver', (data) => {\n      console.log('Game over:', data);\n      setGameOverData(data);\n    });\n  \n    // Cleanup event listeners when component unmounts\n    return () => {\n      socket.off('connect');\n      socket.off('connect_error');\n      socket.off('init');\n      socket.off('gameState');\n      socket.off('gameOver');\n    };\n  }, []);\n  \n  // Update the player list for display\n  const updatePlayerList = useCallback((players) => {\n    const list = Object.entries(players).map(([id, player]) => ({\n      id: id.substring(0, 4),\n      score: player.score,\n      color: player.color,\n      isCurrentPlayer: id === socket.id,\n      playerNumber: player.playerNumber\n    }));\n    setPlayerList(list);\n  }, []);\n  \n  // Handle keyboard input (only during gameplay)\n  // Update the handleKeyDown function with better X key handling\n  const handleKeyDown = useCallback((e) => {\n    // Handle X key for readiness regardless of game phase\n    if (e.key === 'x' || e.key === 'X') {\n      if (gameState && gameState.appPhase === 'homescreen') {\n        const isCurrentlyReady = gameState.readyPlayers.includes(socket.id);\n        console.log('X key pressed, toggling ready state. Current ready:', isCurrentlyReady);\n        socket.emit('playerReady', !isCurrentlyReady);\n        e.preventDefault();\n        return;\n      }\n    }\n    \n    // Only process other game controls if in playing phase\n    if (gameState && gameState.appPhase === 'playing') {\n      let action = null;\n      let dasAction = null;\n      \n      switch (e.key) {\n        case 'ArrowLeft':\n          action = { type: 'moveLeft' };\n          dasAction = { type: 'startDAS', direction: 'left' };\n          break;\n        case 'ArrowRight':\n          action = { type: 'moveRight' };\n          dasAction = { type: 'startDAS', direction: 'right' };\n          break;\n        case 'ArrowDown':\n          action = { type: 'softDrop' };\n          break;\n        case 'ArrowUp':\n        case 'z':\n        case 'Z':\n          action = { type: 'rotate' };\n          break;\n        case ' ': // Space for hard drop\n          action = { type: 'hardDrop' };\n          break;\n        default:\n          break;\n      }\n    \n      if (action) {\n        socket.emit('playerAction', action);\n        if (dasAction) {\n          socket.emit('playerAction', dasAction);\n        }\n        e.preventDefault();\n      }\n    }\n  }, [gameState]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (gameState && gameState.appPhase === 'playing') {\n      if (e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n        socket.emit('playerAction', { type: 'endDAS' });\n      }\n      if (e.key === 'ArrowDown') {\n        socket.emit('playerAction', { type: 'endSoftDrop' });\n      }\n    }\n  }, [gameState]);\n\n  // Event handlers for HomeScreen\n  const handlePlayerReady = useCallback((isReady) => {\n    socket.emit('playerReady', isReady);\n  }, []);\n\n  const handleSetGameMode = useCallback((mode) => {\n    socket.emit('setGameMode', mode);\n  }, []);\n\n  const handleStartGame = useCallback(() => {\n    socket.emit('startGame');\n  }, []);\n\n  // Auto-focus the game div on mount and when game state changes\n  useEffect(() => {\n    const gameDiv = document.getElementById('game-area');\n    if (gameDiv) {\n      gameDiv.focus();\n    }\n  }, [gameState]);\n\n  if (!gameState) {\n    return (\n      <div>\n        <h1>Tetristributed</h1>\n        <p>Connection status: {connectionStatus}</p>\n        <p>Waiting for game state from server...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      id=\"game-area\"\n      onKeyDown={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      tabIndex=\"0\" \n      style={{ outline: 'none', display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n    >\n      {gameState.appPhase === 'homescreen' && (\n        <HomeScreen \n          players={gameState.players}\n          currentPlayerId={socket.id}\n          readyPlayers={gameState.readyPlayers || []}\n          onReady={handlePlayerReady}\n          onStartGame={handleStartGame}\n          onSetGameMode={handleSetGameMode}\n          gameMode={gameState.gameMode}\n          gameInProgress={gameState.gameInProgress}\n          isRejoining={isRejoining}\n        />\n      )}\n      \n      {gameState.appPhase === 'playing' && (\n        <>\n          <h1>Tetristributed</h1>\n          <p>Connected as player: {socket.id && socket.id.substring(0, 4)}</p>\n          \n          <div style={{ display: 'flex', gap: '20px', marginBottom: '20px' }}>\n            <GameBoard \n              board={gameState.board} \n              players={gameState.players}\n              currentPlayerId={socket.id}\n            />\n            \n            <div style={{ minWidth: '200px' }}>\n              <h2>Players</h2>\n              <ul style={{ listStyle: 'none', padding: 0 }}>\n                {playerList.map(player => (\n                  <li \n                    key={player.id} \n                    style={{ \n                      margin: '8px 0',\n                      padding: '8px',\n                      backgroundColor: player.isCurrentPlayer ? '#444' : '#333',\n                      borderLeft: `4px solid ${player.color}`,\n                      borderRadius: '4px'\n                    }}\n                  >\n                    Player {player.id} {player.isCurrentPlayer ? '(You)' : ''}: {player.score} points\n                  </li>\n                ))}\n              </ul>\n              \n              <div style={{ marginTop: '20px' }}>\n                <h3>Game Mode: {gameState.gameMode}</h3>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n      \n      {/* Game over overlay */}\n      {gameOverData && <GameOverScreen gameOverData={gameOverData} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
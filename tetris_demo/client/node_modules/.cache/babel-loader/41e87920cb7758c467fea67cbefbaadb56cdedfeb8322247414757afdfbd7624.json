{"ast":null,"code":"var _jsxFileName = \"/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/GameBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard({\n  board\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // For each cell in the board, draw a small square if non-zero\n    const cellSize = 30; // each cell is 30px\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        if (board[r][c] !== 0) {\n          ctx.fillStyle = 'blue'; // color depends on piece ID\n          ctx.fillRect(c * cellSize, r * cellSize, cellSize, cellSize);\n          ctx.strokeStyle = 'white';\n          ctx.strokeRect(c * cellSize, r * cellSize, cellSize, cellSize);\n        } else {\n          // Draw empty cell or just skip for empties\n        }\n      }\n    }\n  }, [board]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 300 // 10 columns * 30 px\n    ,\n    height: 600 // 20 rows * 30 px\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","GameBoard","board","_s","canvasRef","canvas","current","ctx","getContext","clearRect","width","height","cellSize","r","length","c","fillStyle","fillRect","strokeStyle","strokeRect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/driesrooryck/Desktop/s25/distributed-systems/tetris/client/src/GameBoard.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nfunction GameBoard({ board }) {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // For each cell in the board, draw a small square if non-zero\n    const cellSize = 30; // each cell is 30px\n    for (let r = 0; r < board.length; r++) {\n      for (let c = 0; c < board[r].length; c++) {\n        if (board[r][c] !== 0) {\n          ctx.fillStyle = 'blue'; // color depends on piece ID\n          ctx.fillRect(c * cellSize, r * cellSize, cellSize, cellSize);\n          ctx.strokeStyle = 'white';\n          ctx.strokeRect(c * cellSize, r * cellSize, cellSize, cellSize);\n        } else {\n          // Draw empty cell or just skip for empties\n        }\n      }\n    }\n  }, [board]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      width={300}  // 10 columns * 30 px\n      height={600} // 20 rows * 30 px\n    />\n  );\n}\n\nexport default GameBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,SAASA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACAD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACM,MAAM,CAAC;;IAEhD;IACA,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,KAAK,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,KAAK,CAACW,CAAC,CAAC,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;QACxC,IAAIb,KAAK,CAACW,CAAC,CAAC,CAACE,CAAC,CAAC,KAAK,CAAC,EAAE;UACrBR,GAAG,CAACS,SAAS,GAAG,MAAM,CAAC,CAAC;UACxBT,GAAG,CAACU,QAAQ,CAACF,CAAC,GAAGH,QAAQ,EAAEC,CAAC,GAAGD,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ,CAAC;UAC5DL,GAAG,CAACW,WAAW,GAAG,OAAO;UACzBX,GAAG,CAACY,UAAU,CAACJ,CAAC,GAAGH,QAAQ,EAAEC,CAAC,GAAGD,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ,CAAC;QAChE,CAAC,MAAM;UACL;QAAA;MAEJ;IACF;EACF,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IACEoB,GAAG,EAAEhB,SAAU;IACfM,KAAK,EAAE,GAAI,CAAE;IAAA;IACbC,MAAM,EAAE,GAAI,CAAC;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN;AAACrB,EAAA,CAjCQF,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}